#!/bin/sh /etc/rc.common
. /tmp/loader

START=01

boot()
{
	[ -e "/etc/init.d/apply_profile" ] && return 0

	case "$CONFIG_PROFILE" in
		*_ap)
			# typically the mesh is on channel 11
			uci set wireless.radio0.channel="$( _math random_integer 1 7 )"
		;;
	esac

	[ -n "$LOWMEM" ] && {
		case "${CONFIG_PROFILE}-${NODENUMBER}" in
			lisztwe_ap-15)
			;;
			*)
				[ -n "$( uci get dhcp.@dnsmasq[0].dhcpscript )" ] && uci delete dhcp.@dnsmasq[0].dhcpscript
			;;
		esac

		case "$CONFIG_PROFILE" in
			*_ap)
				[ -z "$( uci get olsrd.@meta[0].hnaslave )" ] && {
					_net local_inet_offer >/dev/null || uci set olsrd.@meta[0].hnaslave=1
				}
			;;
			*_adhoc)
				[ -e "/www/SIMPLE_MESHNODE" ] || {
					# unforce stricter kmodule unloading
					touch "/www/SIMPLE_MESHNODE"
					rm "/www/GOOD_MODULE_UNLOAD"
				}
			;;
		esac
	}

	case "$CONFIG_PROFILE" in
		rehungen*)
			case "$HARDWARE" in
				"TP-LINK TL-WR1043ND")
				;;
				*)
					uci set dhcp.lan.ignore=1
					uci set dhcp.wlan.ignore=1
				;;
			esac
		;;
		boltenhagen*)
			case "$( uci get system.@profile[0].nodenumber )" in
				2|239)
				;;
				*)
					uci set dhcp.lan.ignore=1
				;;
			esac
		;;
		ffweimar*)
		;;
		schoeneck*)
			case "$( uci get wireless.@wifi-iface[0].mode )" in
				ap)
					uci set wireless.@wifi-iface[0].ssid="IFA.$( uci get system.@profile[0].nodenumber )"
				;;
				adhoc)
					uci set wireless.@wifi-iface[0].bssid="02:ca:ff:ee:00:11"
					uci set wireless.radio0.channel="11"
					uci set wireless.radio0.htmode="HT40-"
					uci set wireless.@wifi-iface[0].ssid="o"
				;;
			esac
		;;
		*)
			[ -e "/lib/modules/$( uname -r )/b43.ko" ] && {
				local file="/lib/wifi/mac80211.sh"
				local keyword="keyspec}"	# must be at the end of a line
				local command1='config_get bitrates "$device" bitrates'
				local command2='test -n "$bitrates" \&\& iw dev "$ifname" set bitrates legacy-2.4 $bitrates'

				[ "$( uci get wireless.@wifi-iface[0].mode )" = "adhoc" ] && {
					[ -n "$( uci get wireless.radio0.bitrates )" ] || {
						uci set wireless.radio0.bitrates="6 9 12 18 24 36 48 54"

						case "$( uci get wireless.@wifi-iface[0].mcast_rate )" in
							1000|2000|5500|11000)
								uci delete wireless.@wifi-iface[0].mcast_rate
							;;
						esac
					}

					grep -q "$keyword"$ "$file" && {
						sed -i "s/$keyword$/$keyword ; $command1 ; $command2 /" "$file"
					}
				}
			}
		;;
	esac

	case "$HARDWARE" in
		"Buffalo WHR-HP-G54")
			case "$( uci get wireless.radio0.rxantenna )-$( uci get wireless.radio0.txantenna )" in
				"1-1")
				;;
				*)
					uci set wireless.radio0.rxantenna=1
					uci set wireless.radio0.txantenna=1
					uci commit wireless
				;;
			esac
		;;
		"Linksys WRT54G"*)
			case "$( uci get wireless.radio0.rxantenna )-$( uci get wireless.radio0.txantenna )" in
				"0-0")
				;;
				*)
					uci set wireless.radio0.rxantenna=0
					uci set wireless.radio0.txantenna=0
					uci commit wireless
				;;
			esac
		;;
		"TP-LINK TL-WR1043ND")
			# use driver defaults
			uci delete wireless.radio0.txpower
		;;
	esac

	case "$( uci get wireless.radio0.hwmode )" in
		*"n"*)
			# 802.11n works with distributed beaconing
			uci set wireless.radio0.beacon_int=100
		;;
	esac

	case "$( uci get wireless.radio0.htmode )" in
		HT40*)
			uci set wireless.radio0.noscan="1"
		;;
	esac

	case "$CONFIG_PROFILE" in
		*hybrid)
			grep -q "wlanadhoc" "/etc/config/wireless" && {
				uci show network | grep ^"network.wlanadhoc=" || {
					uci set network.wlanadhoc=interface
					uci set network.wlanadhoc.proto=static
					uci set network.wlanadhoc.ipaddr=$(  uci get network.wlan.ipaddr )
					uci set network.wlanadhoc.netmask=$( uci get network.wlan.netmask )
				}
			}
		;;
	esac

	case "$CONFIG_PROFILE" in
		liszt28*|olympia*)
			[ -e "/usr/sbin/batctl" ] && {
				case "$CONFIG_PROFILE" in
					olympia_hybrid)
						uci set wireless.radio0.htmode="HT20"
						uci set wireless.@wifi-iface[0].ssid="o"
						uci set wireless.@wifi-iface[1].ssid="Hotel Olympia"
					;;
					liszt28_hybrid)
						uci set wireless.radio0.htmode="HT20"
						uci set wireless.@wifi-iface[0].ssid="o"
						uci set wireless.@wifi-iface[1].ssid="BATTEST"
					;;
					liszt28_ap)
						uci set wireless.radio0.htmode="HT20"
						uci set wireless.@wifi-iface[0].ssid="BATTEST"
					;;
				esac

				uci add network alias
				uci set network.@alias[-1].interface="lan"
				uci set network.@alias[-1].proto=batadv
				uci set network.@alias[-1].mesh=bat0

				uci add network alias
				uci set network.@alias[-1].interface="wan"
				uci set network.@alias[-1].proto=batadv
				uci set network.@alias[-1].mesh=bat0

				case "$CONFIG_PROFILE" in
					*hybrid)
						uci add network alias
						uci set network.@alias[-1].interface="wlanadhoc"
						uci set network.@alias[-1].proto=batadv
						uci set network.@alias[-1].mesh=bat0
					;;
					*adhoc)
						uci add network alias
						uci set network.@alias[-1].interface="wlan"
						uci set network.@alias[-1].proto=batadv
						uci set network.@alias[-1].mesh=bat0
					;;
				esac

				case "$CONFIG_PROFILE" in
					*hybrid|*ap)
						_scheduler add 'I=10; while [ $I -gt 0 ]; do brctl addif br-mybridge wlan0 && break; sleep $I; I=$(( $I - 1 )); done'
					;;
				esac

				uci set network.mybridge="interface"
				uci set network.mybridge.type="bridge"
				uci set network.mybridge.ifname="bat0"
				uci set network.mybridge.proto="static"
				uci set network.mybridge.ipaddr="192.168.5.$NODENUMBER"
				uci set network.mybridge.netmask="255.255.255.0"

				if _net local_inet_offer >/dev/null; then
					uci set batman-adv.bat0.gw_mode=server

					uci set dhcp.mybridge=dhcp
					uci set dhcp.mybridge.interface=mybridge
					uci set dhcp.mybridge.start=10
					uci set dhcp.mybridge.limit=100
					uci set dhcp.mybridge.leasetime=1h
					uci set dhcp.mybridge.force=1
					uci set dhcp.mybridge.ignore=0
				else
					uci set dhcp.wlan.ignore=1
#					uci set dhcp.lan.ignore=1
				fi
			}
		;;
	esac
}
