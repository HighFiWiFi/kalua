#!/bin/sh /etc/rc.common
. /tmp/loader

START=01

boot()
{
	for PROG in ulogd firewall sysntpd; do {
		[ -e "/etc/init.d/$PROG" ] || continue
		/etc/init.d/$PROG enabled && /etc/init.d/$PROG disable
	} done

	grep -sq ^'STOP=' '/etc/init.d/network' && {
		sed -i 's/^STOP=/# &/' '/etc/init.d/network'
	}

	[ -e '/etc/init.d/apply_profile' ] && {
		[ -s '/www/cgi-bin-welcome.sh'	] || ln -s '/www/cgi-bin-welcome'   '/www/cgi-bin-welcome.sh'
		[ -s '/www/cgi-bin-sql.sh'	] || ln -s '/www/cgi-bin-sql'	    '/www/cgi-bin-sql.sh'
		[ -s '/www/cgi-bin-tool.sh'	] || ln -s '/www/cgi-bin-tool_fff+' '/www/cgi-bin-tool.sh'

		uci set uhttpd.main.interpreter=".sh=/bin/ash"
		return 0
	}

	case "$HARDWARE" in
		'TP-LINK TL-WDR4900'*)
			# we use the button to trigger an WPS-action/soundplayer
			[ -e '/etc/rc.button/reset' ] && rm '/etc/rc.button/reset'
		;;
	esac

	# mark end of startup-sequence
	grep -q "ENDBOOT" '/etc/init.d/done' || sed -i 's|^}|\n	touch /tmp/ENDBOOT\n}|' '/etc/init.d/done'

	# no DNS-responses on WAN from outside
	[ "$( uci get dhcp.@dnsmasq[0].notinterface )" = "wan" ] || {
		_net local_inet_offer >/dev/null && {
			uci set dhcp.@dnsmasq[0].notinterface='wan'	# add pppoe-wan?
		}
	}

	[ $( _system version short ) -eq 38043 ] && {
		grep -q 'sleep 30' '/etc/init.d/olsrd' || {
			sed -i 's/^start() {$/&\nsleep 30/' '/etc/init.d/olsrd'
		}
	}

	case "$CONFIG_PROFILE" in
		*_ap)
			# typically the mesh is on channel 11
			uci set wireless.radio0.channel="$( _math random_integer 1 7 )"

			case "$( uci get wireless.radio0.htmode )" in
				'HT40'*)
					uci set wireless.radio0.htmode='HT20'
				;;
			esac
		;;
	esac

	case "$CONFIG_PROFILE" in
		boltenhagendh*|dhsylt*|schoeneck*)
			/etc/init.d/6relayd enabled && /etc/init.d/6relayd disable
			uci set network.wan6.disabled=1
			uci set network.wan6.ifname=

			grep "::askconsole:" "/etc/inittab" | grep -q ^"#" || sed -i 's/^.*::askconsole:.*/# &/' "/etc/inittab"
			grep "::askfirst:"   "/etc/inittab" | grep -q ^"#" || sed -i 's/^.*::askfirst:.*/# &/'   "/etc/inittab"
		;;
	esac

	if [ -n "$LOWMEM" ]; then
		# disable unneeded task during normal operation:
		grep "::askconsole:" "/etc/inittab" | grep -q ^"#" || sed -i 's/^.*::askconsole:.*/# &/' "/etc/inittab"
		grep "::askfirst:"   "/etc/inittab" | grep -q ^"#" || sed -i 's/^.*::askfirst:.*/# &/'   "/etc/inittab"

		case "${CONFIG_PROFILE}-${NODENUMBER}" in
			lisztwe_ap-15)
			;;
			*)
				[ -n "$( uci get dhcp.@dnsmasq[0].dhcpscript )" ] && uci delete dhcp.@dnsmasq[0].dhcpscript
			;;
		esac

		case "$CONFIG_PROFILE" in
			*_ap)
				[ -z "$( uci get olsrd.@meta[0].hnaslave )" ] && {
					_net local_inet_offer >/dev/null || uci set olsrd.@meta[0].hnaslave=1
				}
			;;
			*_adhoc)
				[ -e "/www/SIMPLE_MESHNODE" ] || {
					# unforce stricter kmodule unloading
					touch "/www/SIMPLE_MESHNODE"
					rm "/www/GOOD_MODULE_UNLOAD"
				}
			;;
		esac
	else
		if [ $( _system ram_size ) -gt 32768 ]; then
			uci set uhttpd.main.max_requests=10
		else
			uci set uhttpd.main.max_requests=3
		fi
	fi

	is_2ghz()
	{
		local wifi_iface="$1"
		local radio="$( uci get wireless.@wifi-iface[${wifi_iface}].device )"
		local channel="$( uci get wireless.${radio}.channel )"

		test $channel -lt 15
	}

	case "$CONFIG_PROFILE" in
		fparkssee*|apphalle*)
			[ -z "$LOWMEM" ] && uci set olsrd.@meta[0].hnaslave=0
		;;
		liszt28_adhoc)
			uci set wireless.@wifi-iface[0].mcast_rate=6000
			uci set wireless.@wifi-iface[1].mcast_rate=6000

			case "$NODENUMBER" in
				45|62|3|78|6)
					is_2ghz '0' && uci set wireless.@wifi-iface[0].mcast_rate=1000
					is_2ghz '1' && uci set wireless.@wifi-iface[1].mcast_rate=1000
				;;
			esac
		;;
		liszt28_hybrid)
			uci set wireless.@wifi-iface[0].mcast_rate=6000
			uci set wireless.@wifi-iface[2].mcast_rate=6000

			case "$NODENUMBER" in
				45|62|3|78|6)
					is_2ghz '0' && uci set wireless.@wifi-iface[0].mcast_rate=1000
					is_2ghz '2' && uci set wireless.@wifi-iface[2].mcast_rate=1000
				;;
			esac
		;;
		ejbw*)
			uci set olsrd.@meta[0].hnaslave=0

			case "$NODENUMBER" in
				100)
					uci set dhcp.lan.ignore=1

					uci add network alias
					uci set network.@alias[-1].interface="lan"
					uci set network.@alias[-1].proto=static
					uci set network.@alias[-1].ipaddr=192.168.112.2
					uci set network.@alias[-1].netmask=255.255.255.0
					uci set network.@alias[-1].gateway=192.168.112.1

					uci add system netfilter
					uci set system.@netfilter[-1].lan_masquerading=0	# disables lan-masq
				;;
				101)
					uci add network alias
					uci set network.@alias[-1].interface="lan"
					uci set network.@alias[-1].proto=static
					uci set network.@alias[-1].ipaddr=192.168.10.2
					uci set network.@alias[-1].netmask=255.255.255.0
					uci rename network.@alias[-1]=myLAN

					uci add network route
					uci set network.@route[-1].interface="myLAN"
					uci set network.@route[-1].target=192.168.0.0
					uci set network.@route[-1].netmask=255.255.255.0
					uci set network.@route[-1].gateway=192.168.10.1

					uci add olsrd Hna4
					uci set olsrd.@Hna4[-1].netaddr=192.168.10.0
					uci set olsrd.@Hna4[-1].netmask=255.255.255.0

					uci add olsrd Hna4
					uci set olsrd.@Hna4[-1].netaddr=192.168.0.0
					uci set olsrd.@Hna4[-1].netmask=255.255.255.0
				;;
			esac
		;;
		dhsylt_adhoc)
			uci set wireless.radio0.htmode="HT20"
			uci set wireless.@wifi-iface[0].ssid="o"
		;;
		leonardo*)
			uci set olsrd.@meta[0].hnaslave=0
		;;
		tkolleg*)
			uci set olsrd.@meta[0].hnaslave=0
			uci set system.@timeserver[0].server='10.10.0.1'
		;;
		marinabh_ap)
			uci set wireless.radio0.htmode="HT20"
			[ "$NODENUMBER" = "2" ] && uci set wireless.radio0.disabled=1
			uci set olsrd.@meta[0].hnaslave=0
		;;
		marinabh_hybrid)
			uci set wireless.@wifi-iface[0].mcast_rate=18000
		;;
		adagio_adhoc|adagio_hybrid)
			uci set wireless.radio0.channel="11"
			uci set wireless.@wifi-iface[0].bssid="02:ca:ff:ee:00:11"
		;;
		rehungen*)
			case "$HARDWARE" in
				"TP-LINK TL-WR1043ND")
					case "$CONFIG_PROFILE" in
						*adhoc)
							uci set wireless.@wifi-iface[0].bssid="02:be:ef:ca:ff:ee"
						;;
						*hybrid)
							uci set wireless.@wifi-iface[0].bssid="02:be:ef:ca:ff:ee"
							uci set wireless.@wifi-iface[1].ssid="Rehungen $NODENUMBER"
						;;
					esac
				;;
				*)
					uci set dhcp.lan.ignore=1
					uci set dhcp.wlan.ignore=1
				;;
			esac
		;;
		boltenhagen*)
			uci set olsrd.@meta[0].hnaslave=0

			case "$( uci get system.@profile[0].nodenumber )" in
				2|170|139)
					# master, surfstation IB + DH
				;;
				*)
					uci set dhcp.lan.ignore=1
				;;
			esac

			case "$CONFIG_PROFILE" in
				*ap)
					uci set wireless.radio0.htmode="HT20"

					grep -q "sven-ola" "/etc/init.d/olsrd" && {
						uci set olsrd.@Interface[0].speed=20
					}

					case "$NODENUMBER" in
						# node 2 = nexthop
						xxx30)
							uci set olsrd.@olsrd[0].disabled=1
							touch "/tmp/service_olsrd_nowatching"
						;;
					esac

					is_room_dorfhotel()	# later via hostname
					{
						case "$NODENUMBER" in
							6|71|75|76|77|78|79|80|83|84|85|86|87|88|89|90|92|95|96|97|98|99|101|102|103|104|105|106|108|142|143|144|146)
								return 0
							;;
							*)
								return 1
							;;
						esac
					}

					is_room_iberotel()	# later via hostname
					{
						case "$NODENUMBER" in
							3|4|5|8|9|10|11|12|13|14|15|16|17|18|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|60|61|62|63|64|65|66|67|68|69|72|73)
								return 0
							;;
							*)
								return 1
							;;
						esac
					}

					is_room_dorfhotel && uci set wireless.@wifi-iface[0].ssid="Dorfhotel $NODENUMBER"
					is_room_iberotel  && uci set wireless.@wifi-iface[0].ssid="Iberotel $NODENUMBER"
				;;
				*_hybrid|*_adhoc)
					uci set wireless.@wifi-iface[0].bssid="02:be:ef:ca:ff:ee"
				;;
			esac
		;;
		ffweimar*)
		;;
		schoeneck*)
			case "$( uci get wireless.@wifi-iface[0].mode )" in
				ap)
					uci set wireless.radio0.txpower=8
				;;
				adhoc)
					uci set wireless.@wifi-iface[0].bssid="02:ca:ff:ee:00:11"
					uci set wireless.radio0.channel="11"
					uci set wireless.radio0.htmode="HT20"
					uci set wireless.@wifi-iface[0].ssid="o"
					uci set wireless.@wifi-iface[0].mcast_rate=6000
				;;
			esac

			case "$NODENUMBER" in
				228|230|234|231|235|232|229|233)
					# all switched together, netio230b on master
					uci set dhcp.lan.ignore=1
				;;
			esac

			[ "$NODENUMBER" = "2" ] && {
				uci set wireless.radio0.disabled=1
				uci set wireless.radio1.disabled=1

				uci add network alias
				uci set network.@alias[-1].interface="wan"
				uci set network.@alias[-1].proto='static'
				uci set network.@alias[-1].ipaddr='192.168.2.108'
				uci set network.@alias[-1].netmask='255.255.255.0'
			}
		;;
		*)
			[ -e "/lib/modules/$( uname -r )/b43.ko" ] && {
				local file="/lib/wifi/mac80211.sh"
				local keyword="keyspec}"	# must be at the end of a line
				local command1='config_get bitrates "$device" bitrates'
				local command2='test -n "$bitrates" \&\& iw dev "$ifname" set bitrates legacy-2.4 $bitrates'

				[ "$( uci get wireless.@wifi-iface[0].mode )" = "adhoc" ] && {
					[ -n "$( uci get wireless.radio0.bitrates )" ] || {
						uci set wireless.radio0.bitrates="6 9 12 18 24 36 48 54"

						case "$( uci get wireless.@wifi-iface[0].mcast_rate )" in
							1000|2000|5500|11000)
								uci delete wireless.@wifi-iface[0].mcast_rate
							;;
						esac
					}

					grep -q "$keyword"$ "$file" && {
						sed -i "s/$keyword$/$keyword ; $command1 ; $command2 /" "$file"
					}
				}
			}
		;;
	esac

	case "$HARDWARE" in
		"Buffalo WHR-HP-G54")
			case "$( uci get wireless.radio0.rxantenna )-$( uci get wireless.radio0.txantenna )" in
				"1-1")
				;;
				*)
					uci set wireless.radio0.rxantenna=1
					uci set wireless.radio0.txantenna=1
					uci commit wireless
				;;
			esac
		;;
		"Linksys WRT54G"*)
			case "$( uci get wireless.radio0.rxantenna )-$( uci get wireless.radio0.txantenna )" in
				"0-0")
				;;
				*)
					uci set wireless.radio0.rxantenna=0
					uci set wireless.radio0.txantenna=0
					uci commit wireless
				;;
			esac
		;;
		"TP-LINK TL-WR1043ND")
			# use driver defaults
			case "$CONFIG_PROFILE" in
				*ap)
				;;
				*)
					case "$NETWORK" in
						schoeneck_ap)
						;;
						*)
							uci delete wireless.radio0.txpower
						;;
					esac
				;;
			esac
		;;
	esac

	case "$( uci get wireless.radio0.hwmode )" in
		*"n"*)
			# 802.11n works with distributed beaconing
			uci set wireless.radio0.beacon_int=100
		;;
	esac

	case "$( uci get wireless.radio0.htmode )" in
		HT40*)
			uci set wireless.radio0.noscan="1"
		;;
	esac

	case "$CONFIG_PROFILE" in
		*hybrid)
			grep -q "wlanadhoc" "/etc/config/wireless" && {
				uci show network | grep -q ^"network.wlanadhoc=" || {
					uci set network.wlanadhoc=interface
					uci set network.wlanadhoc.proto=static
					uci set network.wlanadhoc.ipaddr=$(  uci get network.wlan.ipaddr )
					uci set network.wlanadhoc.netmask=$( uci get network.wlan.netmask )
				}
			}
		;;
	esac

	batman_needed()
	{
		[ -e "/usr/sbin/batctl" ] || return 1

		case "$CONFIG_PROFILE" in
			liszt28*)
				case "$NODENUMBER" in
					62|223|45|21|3|13|2|23|76|98|25|24|222|20|15|58|99|8)
						return 0
					;;
					*)
					;;
				esac
			;;
			dhsylt*)
				case "$NODENUMBER" in
					18|25|26)
					;;
					*)
						return 0
					;;
				esac
			;;
			olympia*)
			;;
			marinabh*)
				return 0
			;;
			schoeneck*)
				return 0
			;;
			boltenhagendh*|apphalle*)
				return 0
			;;
		esac

		return 1
	}

	batman_kmodules_are_deactivated()
	{
		grep -q ^"#" "/etc/modules.d/50-batman-adv"
	}

	batman_kmodules_force_activation()
	{
		sed -i 's/^[^a-z]*//' '/etc/modules.d/50-batman-adv'
		sed -i 's/^[^a-z]*//' '/etc/modules.d/ebtables'
		sed -i 's/^[^a-z]*//' '/etc/modules.d/macvlan'
	}

	batman_kmodules_force_inactivation()
	{
		sed -i 's/^/# &/' '/etc/modules.d/50-batman-adv'
		sed -i 's/^/# &/' '/etc/modules.d/ebtables'
		sed -i 's/^/# &/' '/etc/modules.d/macvlan'
	}

	set_wifi()
	{
		local wifimode="$1"	# e.g. 'ap'
		local band="$2"		# e.g. '5ghz'
		local var="$3"		# e.g. 'ssid'
		local value="$4"	# e.g. 'myssid'

		for i in $(seq 0 15); do {
			[ "$( uci -q get wireless.@wifi-iface[$i].mode )" = "$wifimode" ] && {
				if [ "$band" = '2ghz' ]; then
					is_2ghz "$i" || continue
				else 	# wish: 5ghz
					is_2ghz "$i" && continue
				fi

				uci set wireless.@wifi-iface[$i].$var="$value"
			}
		} done
	}

	if batman_needed; then
		uci set batman-adv.bat0.orig_interval=1000	# default = 1000 ms

		local file='/etc/init.d/dnsmasq'
		fgrep -q 'netmask_dhcpcalc' "$file" || {
			sed -i 's/start$/&; local netmask_dhcpcalc; config_get netmask_dhcpcalc "$cfg" netmask_dhcpcalc/' "$file"
			sed -i 's/ $netmask / ${netmask_dhcpcalc:-$netmask} /' "$file"
			sed -i 's/,$NETMASK,/,$netmask,/' "$file"
			# since r39101 needed:
			sed -i 's/eval \(.*\)/&\n	test "$PREFIX" = "${netmask_dhcpcalc:-$netmask}" \&\& netmask="$NETMASK"/' "$file"
		}

		batman_kmodules_are_deactivated && batman_kmodules_force_activation
	else
		batman_kmodules_are_deactivated || batman_kmodules_force_inactivation
	fi

	batman_needed && {
		case "$CONFIG_PROFILE" in
			apphalle*)
				uci set wireless.radio0.htmode="HT20"
				set_wifi ap 5ghz ssid 'Appartementhaus highspeed'
				set_wifi ap 2ghz ssid 'Appartementhaus'
				set_wifi adhoc 5ghz ssid 'x'
				set_wifi adhoc 2ghz ssid ':'
			;;
			boltenhagendh*)
				uci set wireless.radio0.htmode="HT20"
				set_wifi ap 5ghz ssid 'Weisse Wiek highspeed'
				set_wifi ap 2ghz ssid 'Weisse Wiek'
				set_wifi adhoc 5ghz ssid 'x'
				set_wifi adhoc 2ghz ssid ':'
			;;
			schoeneck_ap)
				uci set wireless.radio0.htmode="HT20"
				set_wifi ap 2ghz ssid 'IFA Schoeneck'
				set_wifi ap 5ghz ssid 'IFA highspeed'
			;;
			schoeneck_hybrid)
				set_wifi ap 2ghz ssid 'IFA Schoeneck'
				set_wifi ap 5ghz ssid 'IFA highspeed'
			;;
			olympia_hybrid)
				uci set wireless.radio0.htmode="HT20"
				uci set wireless.@wifi-iface[0].ssid="o"
				uci set wireless.@wifi-iface[1].ssid="Hotel Olympia"
			;;
			liszt28*)
				uci set wireless.radio0.htmode="HT20"
				set_wifi ap 5ghz ssid 'Schlachtfest highspeed'
				set_wifi ap 2ghz ssid 'Schlachtfest'
				set_wifi adhoc 5ghz ssid 'x'
				set_wifi adhoc 2ghz ssid ':'
			;;
			dhsylt_hybrid)
				uci set wireless.radio0.htmode="HT20"
				uci set wireless.@wifi-iface[0].ssid="o"
				uci set wireless.@wifi-iface[1].ssid="Dorfhotel Sylt"
			;;
			dhsylt_ap)
				uci set wireless.radio0.htmode="HT20"
				uci set wireless.@wifi-iface[0].ssid="Dorfhotel Sylt"
				[ -n "$( uci get wireless.@wifi-iface[1].ssid )" ] && uci set wireless.@wifi-iface[1].ssid="Dorfhotel Sylt"
			;;
			marinabh_hybrid)
				uci set wireless.radio0.htmode="HT20"
				uci set wireless.@wifi-iface[0].ssid="o"
				uci set wireless.@wifi-iface[1].ssid="Marina Boltenhagen"
			;;
			marinabh_ap)
				uci set wireless.radio0.htmode="HT20"
				uci set wireless.@wifi-iface[0].ssid="Marina Boltenhagen"
			;;
		esac

		local dns_ip i
		local router_ip="192.168.$NODENUMBER.1"
		local master_gateway

		case "$CONFIG_PROFILE" in
			dhsylt*|olympia*|marinabh*)
				master_gateway="192.168.2.1"
				dns_ip="$router_ip"
			;;
			apphalle*)
				router_ip="192.168.0.1"
				master_gateway="192.168.3.1"
				dns_ip="$router_ip"
			;;
			schoeneck*|boltenhagendh*)
				router_ip="192.168.0.1"
				master_gateway="192.168.2.1"
				dns_ip="$router_ip"
			;;
			liszt28*)
				router_ip="192.168.0.1"		# every router has this ip (there is never a NODE 0)
				master_gateway="192.168.99.1"
				dns_ip="$router_ip"
			;;
		esac

		local startup="/tmp/WIFI_SPECIALS.sh"

		batalias_add_if_needed()
		{
			local funcname='batalias_add_if_needed'
			local ifname_ask="$1"
			local ifname proto i j devname
			local exists=

			for i in $(seq 0 100); do {
				proto="$( uci -q get network.@alias[${i}].proto )" || continue

				case "$proto" in
					'batadv')
						ifname="$( uci -q get network.@alias[${i}].interface )"
						[ "$ifname_ask" = "$ifname" ] && {
							j=$(( $j + 1 ))
							exists='true'
						}
					;;
				esac
			} done

			[ ${j:-0} -gt 1 ] && _log do $funcname daemon alert "ifname '$ifname_ask'-count: $j"

			[ -z "$exists" ] && {
				uci add network alias
				uci set network.@alias[-1].interface="$ifname_ask"
				uci set network.@alias[-1].proto=batadv
				uci set network.@alias[-1].mesh=bat0
			}

			cat >>"$startup" <<EOF
DEVNAME=\$( ifstatus "$ifname_ask" | grep '"device":' | cut -d'"' -f4 )
batctl interface | grep -q ^"\$DEVNAME: active" || batctl if add \$DEVNAME
EOF
		}

		batalias_add_if_needed 'lan'

		uci -q get network.wan >/dev/null && {
			# fixme! ejbw needs an override
			case "$( _net local_inet_offer )" in
				'wan'|'pppoe')
					echo >>"$startup" "# wan not added, because local inet-offer"
				;;
				*)
					batalias_add_if_needed 'wan'
				;;
			esac
		}

		integer2fourhex()	# e.g. 8 -> 00:08
		{			# fixme! max = 999 fixme! generalize it, join with bssid_wellformed()
			if [ $1 -lt 100 ]; then
				if [ $1 -lt 10 ]; then
					echo "00:0$1"
				else
					echo "00:$1"
				fi
			else
				echo "0$( echo "$1" | cut -b 1 ):$( echo "$1" | cut -b 2-3 )"
			fi
		}

		# fixme! iterate over all wifi-interfaces
		case "$CONFIG_PROFILE" in
			*hybrid)
				batalias_add_if_needed 'wlanadhoc'

				# ap-interface:
				# wireless.@wifi-iface[1].network=wlan
				local varname="$( uci show wireless | grep "\.network=wlan"$ | head -n1 | cut -d'=' -f1 | sed 's/\.network//' )"
				uci set $varname.macaddr="02:00:ca:fe:$( integer2fourhex "$NODENUMBER" )"

				[ "$( uci get network.wlanadhocRADIO1 )" = "interface" ] && {
					batalias_add_if_needed 'wlanadhocRADIO1'

					# ap-interface:
					# wireless.@wifi-iface[3].network=wlanRADIO1
					local varname="$( uci show wireless | grep "\.network=wlanRADIO1"$ | head -n1 | cut -d'=' -f1 | sed 's/\.network//' )"
					uci set $varname.macaddr="02:00:ca:ff:$( integer2fourhex "$NODENUMBER" )"
				}
			;;
			*adhoc)
				batalias_add_if_needed 'wlan'
			;;
		esac

		uci set network.lan.macaddr="02:00:ca:b1:$( integer2fourhex "$NODENUMBER" )"
		uci set network.wan.macaddr="02:00:de:ad:$( integer2fourhex "$NODENUMBER" )"

		case "$CONFIG_PROFILE" in
			*hybrid)
				for i in $(seq 0 15); do {
					[ "$( uci -q get wireless.@wifi-iface[$i].mode )" = "ap" ] && {
						echo >>"$startup" "NAME=\"\$( uci get wireless.@wifi-iface[$i].network )\""
						echo >>"$startup" "DEV=\$( ifstatus \"\$NAME\" | grep '\"device\":' | cut -d'\"' -f4 )"
						echo >>"$startup" "_log do batman daemon info \"$startup: adding DEV \$DEV to br-mybridge\""
						echo >>"$startup" "brctl addif br-mybridge \$DEV"
					}
				} done
			;;
			*ap)
				echo >>"$startup" "_log do batman daemon info \"$startup: adding DEV wlan0 to br-mybridge\""
				echo >>"$startup" "brctl addif br-mybridge wlan0"
				echo >>"$startup" "brctl addif br-mybridge wlan1	# dirty: simply fails if n/a"
			;;
		esac

#		echo "dnsmasq --address=/#/10.63.$NODENUMBER.1 -p 5353" >>"$startup"

		uci set network.mybridge="interface"
		uci set network.mybridge.type="bridge"
		uci set network.mybridge.ifname="bat0"
		uci set network.mybridge.proto="static"
		uci set network.mybridge.ipaddr="192.168.$NODENUMBER.1"
		uci set network.mybridge.netmask="255.255.0.0"
		uci set network.mybridge.netmask_dhcpcalc="255.255.255.0"

		# https://lists.open-mesh.org/pipermail/b.a.t.m.a.n/2013-November/010913.html
		local mac_gateway="02:00:c0:ca:c0:1a"
		which ebtables >/dev/null && {
			echo >>"$startup" "ebtables -A FORWARD -j DROP -d '$mac_gateway'"
			echo >>"$startup" "ebtables -t nat -A POSTROUTING -o bat0 -j DROP -s '$mac_gateway'"
			echo >>"$startup" "#  query via: ebtables -L FORWARD --Lc; ebtables -t nat -L POSTROUTING --Lc"
		}

		case "$CONFIG_PROFILE" in
			*_adhoc)
			;;
			liszt28*|schoeneck*|boltenhagendh*|apphalle*)
				# depends on kmod-macvlan
				echo >>"$startup" "_log do batman daemon info \"$startup: forcing gateways ip/mac: $router_ip/$mac_gateway\""
				echo >>"$startup" "ip link add link 'br-mybridge' 'gateway0' address '$mac_gateway' type macvlan"
				echo >>"$startup" "ip address add $router_ip/32 dev gateway0"
				echo >>"$startup" "ip link set dev gateway0 up"
			;;
		esac

		case "$CONFIG_PROFILE" in
			*_adhoc|*_hybrid)
				uci set batman-adv.bat0.bridge_loop_avoidance=1
			;;
		esac

		# every node is a server, which means: answer DHCP locally
		if [ "$( uci get network.mybridge.ipaddr )" = "$master_gateway" ]; then
			uci set batman-adv.bat0.gw_mode=server
			uci set batman-adv.bat0.gw_bandwidth="16384kbit/16384kbit"
		else
			uci set batman-adv.bat0.gw_mode=server
			uci set batman-adv.bat0.gw_bandwidth="512kbit/512kbit"

			case "$CONFIG_PROFILE" in
				schoeneck*|boltenhagendh*|apphalle*)
					# no l3-routing proto running, so we need a fix master-gateway
					uci set network.mybridge.gateway="$master_gateway"
					uci set system.@weblogin[0].authserver="$master_gateway"
				;;
			esac
		fi

		uci set dhcp.mybridge=dhcp
		uci set dhcp.mybridge.interface=mybridge
		uci set dhcp.mybridge.start=2
		uci set dhcp.mybridge.limit=253
		uci set dhcp.mybridge.leasetime=12h
		uci set dhcp.mybridge.force=1
		uci set dhcp.mybridge.ignore=0
		uci set dhcp.mybridge.netmask=255.255.0.0
		uci set dhcp.mybridge.dhcp_option="option:router,$router_ip,$dns_ip"	# fixme! dynamic set during runtime
		uci set dhcp.mybridge.leasetime=10m

		uci set dhcp.wlan.ignore=1
	}

	case "$CONFIG_PROFILE" in
		liszt28*)
			grep -q "unlimited" "/lib/wifi/hostapd.sh" || {
				sed -i 's/hostapd -P/ulimit -c unlimited; &/' /lib/wifi/hostapd.sh
			}
		;;
	esac
}
