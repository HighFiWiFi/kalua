#!/bin/sh
. /tmp/loader		# this script runs ~ every 15 minutes

echo 1 >/proc/sys/net/ipv4/ip_forward

case "$( uci get wireless.radio0.htmode )" in
	HT40*)
		case "$( _wifi mode $WIFIDEV )" in
			ap)
				uci set wireless.radio0.htmode=HT20
				uci commit wireless
			;;
		esac
	;;
esac

# it seems, that sometimes the powersettings are lost
TXPOWER="$( uci get wireless.radio0.txpower )"
[ -n "$TXPOWER" ] && iw dev $WIFIDEV set txpower fixed "${TXPOWER}00"

_watch flash_free_space

_watch wifi_mode || sleep 30		# lets settle down to see some neighs

[ -e "/tmp/service_olsrd_nowatching" ] || {
	_olsr check_plausi || {
		_log do olsr_deepwatch daemon info "error during check_plausi, watching again in 65sec"

		sleep 65
		_olsr build_tables

		if _olsr check_plausi deep; then
			_log do olsr_deepwatch daemon info "[OK] no error on 2nd check"
		else
			_olsr daemon restart "plausi_check_failed"
		fi
	}
}

_watch system_time
_watch dns_resolution
_watch pppoe
_watch netserver
_watch sshd_or_telnet
_watch random_node_id

case "$CONFIG_PROFILE" in
	liszt28*)
		cron.add_collected_userdata_into_db
		_netfilter user_stats_process
	;;
esac

case "$CONFIG_PROFILE" in
	extrawatt*|shankar*|fparkssee*|preskil*|limona*|marinapark*)
		REVERSE_SSHTUNNEL="true"
	;;
	*)
		REVERSE_SSHTUNNEL=
	;;
esac

[ "$( uci get system.@monitoring[0].maintenance )" = "reverse_sshtunnel" ] && {
	REVERSE_SSHTUNNEL="true"
}

[ -n "$REVERSE_SSHTUNNEL" ] && {
	[ -e "/tmp/service_ssh_nowatching" ] && {
		rm "/tmp/service_ssh_nowatching"
	}

	pidof dbclient >/dev/null || {
		_net local_inet_offer >/dev/null && {
			_watch sshd_or_telnet

			SERVER="$( _http url_get_serverstring "$( uci get system.@monitoring[0].url )" )"
			PORT_LISTENING="$( _net text2port "${CONFIG_PROFILE}${HOSTNAME}" )"
			_log do reverse_sshtunnel daemon debug "[START] on local port $PORT_LISTENING"

			dbclient -y -I 600 -K 300 -f -N \
				 -R $PORT_LISTENING:localhost:22 \
				 -p 22 root@${SERVER} \
				 -i "/etc/dropbear/dropbear_dss_host_key"

			if pidof dbclient >/dev/null; then
				_log do reverse_sshtunnel daemon info "[READY] pid: '$( pidof dbclient )' on local port $PORT_LISTENING"
			else
				_log do reverse_sshtunnel daemon alert "[ERR] could not startup on local port $PORT_LISTENING"
			fi
		}
	}
}

_firmware upgrade_is_needed && {
	touch /tmp/START_SYSUPGRADE
}

case "$CONFIG_PROFILE" in
	zumnorde*|adagio*|lisztwe*|apphalle*|fparkssee*|marinapark*|satama*|monami*|liszt28*|elephant*)
		case "$CONFIG_PROFILE" in
			*ap)
				case "$HOSTNAME" in
					SA-leuchtturm-AP|SA-restaurant-MESH)
					;;
					*)
						[ -n "$( uci get dhcp.@dnsmasq[0].dhcpscript )" ] && {
							uci delete dhcp.@dnsmasq[0].dhcpscript
							/etc/init.d/dnsmasq restart
						}
					;;
				esac

				[ -z "$( uci get olsrd.@meta[0].hnaslave )" ] && {
					uci set olsrd.@meta[0].hnaslave=1
				}
			;;
			*adhoc)
				[ $( _system ram_size ) -lt 16384 ] && {
					[ -e "/www/SIMPLE_MESHNODE" ] || {
						[ -e "/www/SIMPLE_MESH" ] && rm "/www/SIMPLE_MESH"	# accident
						touch "/www/SIMPLE_MESHNODE"
						rm "/www/GOOD_MODULE_UNLOAD"
						reboot
					}
				}
			;;
		esac
	;;
esac

[ -e "/etc/init.d/firewall" ] && {
	/etc/init.d/firewall disable
}

[ -e "/etc/init.d/ulogd" ] && {
	/etc/init.d/ulogd disable
}

if iptables -t mangle -nL shaper | grep -q ^ACCEPT ; then
	[ -e "/etc/init.d/netfilter" ] && {
		/etc/init.d/netfilter enable
		reboot
	}
else
	[ -s "/etc/rc.d/S45netfilter" ] || {
		/etc/init.d/netfilter enable
		/etc/init.d/netfilter restart
	}
fi

[ -e "/tmp/ENDBOOT" ] || {
	[ "$( _system uptime min )" -gt 5 ] && {
		touch "/tmp/ENDBOOT"
		killall rcS     # fixme!

		[ $( _system ram_size ) -lt 16384 ] && {
			[ -e "/www/GOOD_MODULE_UNLOAD" ] && {
				grep -q "ipt_LOG" "/www/GOOD_MODULE_UNLOAD" || {
					rm "/www/GOOD_MODULE_UNLOAD"
				}
			}

			/etc/init.d/S70prepare_fff+ unload_unneeded_kmodules
		}
	}
}
