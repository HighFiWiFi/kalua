#!/bin/sh
. /tmp/loader		# this script runs ~ every 15 minutes

_watch flash_free_space
_watch wifi_mode || _log sleep let_wifi_settle_down 180 step 5

case "$CONFIG_PROFILE" in
	leonardo*)
		[ "$( _net local_inet_offer )" = "wan" ] && {
			GATEWAY="$( _sanitizer do "$( ip route list exact 0.0.0.0/0 )" ip4 )"
			if _net ip_reachable "$GATEWAY" 10 $WANDEV; then
				_log do check1_wanadr daemon info "[OK] arping to gateway '$GATEWAY'"
			else
				_log do check1_wanadr daemon alert "WANADR: '$WANADR' - GATEWAY: '$GATEWAY' unreachable, restarting WAN"
				ifup wan
				sleep 10
				/etc/init.d/S41build_static_netparam call
				. /tmp/loader
			fi

			if _net ip4_is_private "$WANADR" ; then
				_log do check2_wanadr daemon alert "WANADR: '$WANADR' - restarting WAN, needs public IP"
				kill -SIGUSR2 $( pidof udhcpc )		# release DHCP-Address
				ifup wan
				sleep 10
				/etc/init.d/S41build_static_netparam call
				. /tmp/loader
			else
				_log do check2_wanadr daemon info "[OK] WANADR: '$WANADR' - is public IP"
			fi
		}
	;;
	OFF-hotello-B01*|OFF-hotello-K80*)
		[ -e "/tmp/service_olsrd_nowatching" ] || {
			_olsr check_plausi || {
				_log do olsr_deepwatch daemon info "error during check_plausi, watching again in 65sec"

				sleep 65
				_olsr build_tables

				if _olsr check_plausi deep; then
					_log do olsr_deepwatch daemon info "[OK] no error on 2nd check"
				else
					_olsr daemon restart "plausi_check_failed"
				fi
			}
		}
	;;
esac

_watch system_time
_watch dns_resolution
_watch pppoe
_watch sshd_or_telnet
_watch random_node_id
_watch dhcp_space
_net refresh_dnshosts

case "$CONFIG_PROFILE" in
	ffweimar*)
	;;
	*)
		cron.add_collected_userdata_into_db

		_log sleep jitter_user_stats_process "$( _math random_integer 0 100 )" step 5
		_netfilter user_stats_process
	;;
esac

[ -n "$LOWMEM" ] && /usr/sbin/cron.reverse_ssh_tunnel

_firmware upgrade_is_needed && {
	if _wifi watch_phy_problems; then
		touch /tmp/START_SYSUPGRADE
	else
		_system reboot_safe "update needed, but phy_problems: rebooting before firmware update"
	fi
}

if iptables -t mangle -nL shaper | grep -q ^ACCEPT ; then
	[ -e "/etc/init.d/netfilter" ] && {
		/etc/init.d/netfilter enable
		reboot
	}
else
	[ -s "/etc/rc.d/S45netfilter" ] || {
		/etc/init.d/netfilter enable
		/etc/init.d/netfilter restart
	}
fi

[ -e "/tmp/ENDBOOT" ] || {
	[ "$( _system uptime min )" -gt 5 ] && {
		touch "/tmp/ENDBOOT"
		killall rcS     # fixme!
	}
}
