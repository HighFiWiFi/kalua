#!/bin/sh

case "$ACTION" in
	ifup)
		[ -e '/tmp/loader' ] || . /etc/rc.common /etc/init.d/cron.user boot

		uci -q get network.$INTERFACE.dyndns >/dev/null && {
			. /tmp/loader
			_wget do "$( uci -q get network.$INTERFACE.dyndns )"
		}

		[ "$( uci -q get network.$INTERFACE.proto )" = 'dhcp' ] && {
			. /tmp/loader
			echo >>$SCHEDULER '/etc/init.d/S41build_static_netparam'
		}

		case "$INTERFACE" in
			'wan')
				. /tmp/loader

				WANADR="$( ubus call network.interface.wan status | grep '"address": ' | head -n1 | cut -d'"' -f4 )"
				if _net ip4_is_private "$WANADR"; then
					case "$( uci -q get network.wan.public_ip )" in
						1|on|true|enabled)
							# we know it should be a public ip, but by accident... (e.g. 2nd internal DCHP)
							echo >>$SCHEDULER_IMPORTANT 'ifup wan'
						;;
					esac
				else
					_system maintenance_window_active || {
						_log do $ACTION.$INTERFACE daemon alert "unscheduled event: WANADR: $WANADR"
					}

					mkdir '/tmp/fail2ban' && {
						_log do dyndns.$ACTION daemon info "prevent DNS-AmpAttac on dev '$DEVICE' for IP $WANADR"

						$IPT -I INPUT -i $DEVICE -p tcp --dport 53 -j DROP
						$IPT -I INPUT -i $DEVICE -p udp --dport 53 -j DROP

						# WIFI_IP=10.63.99.1/8
						WIFI_ADR="$( _ipsystem getvar 'WIFI_ADR' )"
						WIFI_PRE="$( _ipsystem getvar 'WIFI_PRE' )"
						THRUSTED_NET="$WIFI_ADR/$WIFI_PRE"

						$IPT -I INPUT ! -s $MONITORING_SERVERIP -p tcp --dport 22 -j REJECT
						$IPT -I INPUT   -s $THRUSTED_NET	-p tcp --dport 22 -j ACCEPT
						$IPT -I INPUT   -s 127.0.0.1            -p tcp --dport 22 -j ACCEPT
					}

					# important for sending new public ip-address
					. /usr/sbin/cron.monitoring.functions
					heartbeat_minimal_send
				fi
			;;
		esac
	;;
	ifupdate|ifdown)
		# wrong place but works:
		[ -e '/etc/crontabs/root' ] && {
			[ -e '/tmp/loader' ] || . /etc/rc.common /etc/init.d/cron.user boot
			. /tmp/loader

			[ "$( _stopwatch stop '/tmp/CRON_LASTCALL' interim,nolog,seconds )" -gt 300 ] && {
				# locking maybe unneeded
				mkdir '/tmp/LOCK_dhcpscript_cron_restart' && {
					if pidof crond >/dev/null; then
						_stopwatch start '/tmp/CRON_LASTCALL' global
						_log do iface_$ACTION daemon alert "cron hangs, restarting"
						/etc/init.d/S51crond_fff+ restart
					else
						_stopwatch start '/tmp/CRON_LASTCALL' global
						_log do iface_$ACTION daemon alert "cron died, starting"
						/etc/init.d/S51crond_fff+ start
					fi

					rm -fR '/tmp/LOCK_dhcpscript_cron_restart'
				}
			}
		}
	;;
esac
