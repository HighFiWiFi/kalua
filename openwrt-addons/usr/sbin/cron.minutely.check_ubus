#!/bin/sh

if [ -e '/tmp/UBUSDEAD' ]; then
	. /tmp/loader
	_system crashreboot 'ubus_hangs'
else
	touch '/tmp/UBUSDEAD'
#	echo "[START] ubus call system info" >/dev/console
	REST="$( ubus call system info )" || RC=$?
#	echo "[READY] ubus call system info - RC: $RC" >/dev/console

	case "$REST" in
		*'uptime'*)
			# https://dev.openwrt.org/ticket/14620
#			echo "[START] ubus call network.interface.lan status" >/dev/console
			REST="$( ubus call network.interface.lan status )" || RC=$?
#			echo "[READY] ubus call network.interface.lan status - RC: $RC" >/dev/console

			case "$REST" in
				*'"address":'*)
				;;
				*)
					UBUS_OUT="$REST"	# loader changes var

					. /tmp/loader
					_log do ubus_checker daemon alert "out2: '$UBUS_OUT' rc: $RC duration: $( _file age '/tmp/UBUSDEAD' sec )s"
					_system crashreboot 'ubus_hangs'
				;;
			esac

			REST="$( pidof logd )"
#			echo "[START] ubus call log read" >/dev/console
			ubus call log read >/dev/null || RC=$?
#			echo "[READY] ubus call log read - RC: $RC" >/dev/console
			if [ "$REST" = "$( pidof logd )" ]; then
				touch '/tmp/UBUSDEAD'
#				echo "[START] logread" >/dev/console
				REST="$( logread )" || RC=$?
#				echo "[READY] logread - RC: $RC" >/dev/console
				[ -z "$REST" ] && {
					UBUS_OUT="$REST"	# loader changes var
					. /tmp/loader
					_log do logread_checker daemon alert "out3: '$UBUS_OUT' rc: $RC duration: $( _file age '/tmp/UBUSDEAD' sec )s"
					ubus list -v >>'/www/everlasting_syslog.txt'
				}
			else
				PID_LOGD="$REST"		# loader changes var
				. /tmp/loader
				_log do logd_checker daemon alert "logd-pid changed, was '$PID_LOGD', RC: $RC"
			fi
		;;
		*)
			UBUS_OUT="$REST"	# loader changes var

			. /tmp/loader
			case "$CONFIG_PROFILE" in
#				liszt28*)
#					_log do ubus_checker daemon sms   "out: '$UBUS_OUT' rc: $RC duration: $( _file age '/tmp/UBUSDEAD' sec )s"
#				;;
				*)
					_log do ubus_checker daemon alert "out: '$UBUS_OUT' rc: $RC duration: $( _file age '/tmp/UBUSDEAD' sec )s"
				;;
			esac
		;;
	esac

	rm '/tmp/UBUSDEAD'
fi
