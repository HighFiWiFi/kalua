#!/bin/sh
. /tmp/loader

FILE="/tmp/COLLECT_DATA"
FILE_TEMP="$FILE.working"

[ -e "$FILE" ] || exit 0
mv "$FILE" "$FILE_TEMP"
FILE="$FILE_TEMP"

UNIXTIME="$( date +%s )"
UPTIME_NOW="$( _system uptime sec )"

while read QUERY_STRING; do {
	eval $( _http query_string_sanitize )	# UPTIME|REMOTE_ADDR|CMA|CTU|CBI|CBO
	LIST="$( _http query_string_group2list CMA_ )"

	for ID in $LIST; do {
		eval CMA="\$CMA_${ID}"		# client mac address
		eval CTU="\$CTU_${ID}"		# client time used
		eval CBI="\$CBI_${ID}"		# client bytes incoming
		eval CBO="\$CBO_${ID}"		# client bytes outgoing
		eval CAH="\$CAH_${ID}"		# client auth hash

		[ $(( $CBI + $CBO )) -eq 0 ] && continue

		DEVICE_ID="$( _db user device query string2id "${CMA:-unsetmacaddress}" )"
		[ -n "$DEVICE_ID" ] && {
			eval $( _db user device show "$DEVICE_ID" )

			LASTSEEN="$(( $UNIXTIME - ($UPTIME_NOW - $UPTIME) ))"	# design-issue in database, so we must rethink:
			USED_TRAFFIC=$(( $USED_TRAFFIC + $CBI ))		# USED_TRAFFIC -> USED_TRAFFIC_DOWNLOAD
			USED_TRAFFIC_TODAY=$(( $USED_TRAFFIC_TODAY + $CBO ))	# USED_TRAFFIC_TODAY -> USED_TRAFFIC_UPLOAD
			USED_TIME=$(( $USED_TIME + $CTU ))

			_log do loop daemon info "updating $CMA from node $REMOTE_ADDR: +$CBI/$CBO bytes, +$CTU sec"
			_db user device update \
				"$DEVICE_ID" \
				"$USER_ID" \
				"$MAC" \
				"$DEVTYPE" \
				"$LANG" \
				"$FIRSTSEEN" \
				"$LASTSEEN" \
				"$USED_TRAFFIC" \
				"$USED_TIME" \
				"$USED_TRAFFIC_TODAY" \
				"$USED_TIME_TODAY" \
				"$ISOLATION"

			LOGIN_ID="$( _db user login query hash2id "$CAH" )"		# fixme!
			[ -z "$LOGIN_ID" ] && {
				_log do map2login daemon info "cannot find hash $CAH"
				continue
			}

			eval $( _db user login show "$LOGIN_ID" "PROFILE_ID" )
			_log do loop daemon info "LOGIN_ID: $LOGIN_ID -> PROFILE_ID: $PROFILE_ID"

			TIME_MODEL=; MAX_TIME=; MAX_TRAFFIC=
			eval $( _db user profile show "$PROFILE_ID" "TIME_MODEL MAX_TIME MAX_TRAFFIC" )
			LOCK_LOGIN=

			[ -n "$MAX_TIME" ] && {				# minutes
				MAX_TIME=$(( $MAX_TIME * 60 ))		# seconds

				if [ "$TIME_MODEL" = "0" ]; then	# used time
					[ $USED_TIME -gt $MAX_TIME ] && {
						_log do lock_login daemon alert "TIME_MODEL: $TIME_MODEL USED_TIME: $USED_TIME MAX_TIME: $MAX_TIME"
						LOCK_LOGIN="-2"
					}
				else					# passed time
					[ $(( $FIRSTSEEN - $LASTSEEN )) -gt $MAX_TIME ] && {
						_log do lock_login daemon alert "TIME_MODEL: $TIME_MODEL FIRSTSEEN: $FIRSTSEEN LASTSEEN: $LASTSEEN MAX_TIME: $MAX_TIME"
						LOCK_LOGIN="-2"
					}
				fi
			}

			[ -n "$MAX_TRAFFIC" ] && {			# kilobytes
				[ $(( ($USED_TRAFFIC + $USED_TRAFFIC_TODAY) / 1024 )) -gt $MAX_TRAFFIC ] && {
					_log do lock_login daemon alert "USED_TRAFFIC: $USED_TRAFFIC USED_TRAFFIC_TODAY: $USED_TRAFFIC_TODAY MAX_TRAFFIC: $MAX_TRAFFIC"
					LOCK_LOGIN="-3"
				}
			}

			[ -n "$LOCK_LOGIN" ] && {
				eval $( _db user login show "$LOGIN_ID" )
				DEVICE_QUANTITY="$LOCK_LOGIN"

				_log do lock_login daemon alert "ID: $LOGIN_ID, reason: $LOCK_LOGIN, comment/user/pass: $COMMENT/$USERNAME/$PASSWORD"

				_db user login update \
					"$LOGIN_ID" \
					"$PROFILE_ID" \
					"$COMMENT" \
					"$USERNAME" \
					"$PASSWORD" \
					"$DEVICE_QUANTITY" \
					"$INSTALLED" \
					"$FUZZY"

				_db user login index_gen lock "$LOGIN_ID"

				case "$REMOTE_ADDR" in
					$WIFIADR|$LANADR|$WANADR)
						_netfilter user_del "$CMA"
					;;
					*)
						CMA_URLENCODED="${CMA//:/%3a}"
						ANSWER="$( _wget do "http://$REMOTE_ADDR/cgi-bin-kick.sh?CAH=${CAH}&CMA=${CMA_URLENCODED}" )"
						_log do remote_kick daemon info "answer: '$ANSWER'"
					;;
				esac
			}
		}
	} done
} done <"$FILE"

rm "$FILE"
