Index: compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel.c
===================================================================
--- compat-wireless-2014-11-04.orig/net/mac80211/rc80211_minstrel.c	2015-02-05 15:48:36.290501395 +0100
+++ compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel.c	2015-02-05 16:03:53.000000000 +0100
@@ -101,6 +101,42 @@
 	return tp_max;
 }
 
+/* return the 5%-Quantile of throughput:
+ * the true value of throughput is with a probability of ~95%
+ * above the calculated bound: ø(thr) - 2*σ(thr) */
+int minstrel_get_tp_5_percent_quantile(struct minstrel_rate *mr)
+{
+	int tp_sd, tp_avg, usecs;
+
+	usecs = mr->perfect_tx_time;
+	if (!usecs)
+		usecs = 1000000;
+
+	tp_sd = mr->stats.prob_ewmsd * minstrel_get_tp_max(mr) / 1000;
+	tp_avg = minstrel_get_tp_avg(mr);
+
+	if (tp_avg > 2 * tp_sd)
+		return (tp_avg - 2 * tp_sd);
+	else
+		return 0;
+}
+
+/* return the 5%-Quantile of probability:
+ * the true value of sucess prob is with a probability of ~95%
+ * above the calculated bound: ø(prob) - 2*σ(prob) */
+int minstrel_get_prob_5_percent_quantile(struct minstrel_rate *mr)
+{
+	int prob_ewma, prob_sd;
+
+	prob_ewma = MINSTREL_TRUNC(mr->stats.prob_ewma * 1000);
+	prob_sd = mr->stats.prob_ewmsd;
+
+	if (prob_ewma > 2 * prob_sd)
+		return (prob_ewma - 2 * prob_sd);
+	else
+		return 0;
+}
+
 /* find & sort topmost throughput rates */
 static inline void
 minstrel_sort_best_tp_rates(struct minstrel_sta_info *mi, int i, u8 *tp_list)
Index: compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel_debugfs.c
===================================================================
--- compat-wireless-2014-11-04.orig/net/mac80211/rc80211_minstrel_debugfs.c	2015-02-05 15:48:36.290501395 +0100
+++ compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel_debugfs.c	2015-02-05 15:48:36.286501314 +0100
@@ -75,7 +75,7 @@
 {
 	struct minstrel_sta_info *mi = inode->i_private;
 	struct minstrel_debugfs_info *ms;
-	unsigned int i, tp_max, tp_avg, prob, eprob;
+	unsigned int i, tp_max, tp_avg, tp_5_percent_q, prob, eprob;
 	char *p;
 
 	ms = kmalloc(2048, GFP_KERNEL);
@@ -85,11 +85,11 @@
 	file->private_data = ms;
 	p = ms->buf;
 	p += sprintf(p, "\n");
-	p += sprintf(p, "best   __________rate_________    ______"
-			"statistics______    ________last_______    "
+	p += sprintf(p, "best   __________rate_________    ___________"
+			"statistics__________    ________last_______    "
 			"______sum-of________\n");
-	p += sprintf(p, "rate  [name idx airtime max_tp]  [ ø(tp) ø(prob) "
-			"σ(prob)]  [prob.|retry|suc|att]  "
+	p += sprintf(p, "rate  [name idx airtime max_tp]  [ ø(tp) ø-2σ(tp) "
+			"ø(prob) σ(prob)]  [prob.|retry|suc|att]  "
 			"[#success | #attempts]\n");
 
 	for (i = 0; i < mi->n_rates; i++) {
@@ -109,14 +109,16 @@
 
 		tp_max = minstrel_get_tp_max(mr);
 		tp_avg = minstrel_get_tp_avg(mr);
+		tp_5_percent_q = minstrel_get_tp_5_percent_quantile(mr);
 		prob = MINSTREL_TRUNC(mrs->cur_prob * 1000);
 		eprob = MINSTREL_TRUNC(mrs->prob_ewma * 1000);
 
-		p += sprintf(p, "%4u.%1u   %4u.%1u   %3u.%1u   %3u.%1u"
-				"     %3u.%1u %3u   %3u %-3u   "
+		p += sprintf(p, "%4u.%1u   %4u.%1u   %4u.%1u   %3u.%1u   "
+				"%3u.%1u     %3u.%1u %3u   %3u %-3u   "
 				"%9llu   %-9llu\n",
 				tp_max / 10, tp_max % 10,
 				tp_avg / 10, tp_avg % 10,
+				tp_5_percent_q / 10, tp_5_percent_q % 10,
 				eprob / 10, eprob % 10,
 				mrs->prob_ewmsd / 10, mrs->prob_ewmsd % 10,
 				prob / 10, prob % 10,
@@ -151,7 +153,7 @@
 	struct minstrel_sta_info *mi = inode->i_private;
 	struct minstrel_debugfs_info *ms;
 	struct timeval tv;
-	unsigned int i, tp_max, tp_avg, prob, eprob;
+	unsigned int i, tp_max, tp_avg, tp_5_percent_q, prob, eprob;
 	char *p;
 
 	ms = kmalloc(2048, GFP_KERNEL);
@@ -181,13 +183,15 @@
 
 		tp_max = minstrel_get_tp_max(mr);
 		tp_avg = minstrel_get_tp_avg(mr);
+		tp_5_percent_q = minstrel_get_tp_5_percent_quantile(mr);
 		prob = MINSTREL_TRUNC(mrs->cur_prob * 1000);
 		eprob = MINSTREL_TRUNC(mrs->prob_ewma * 1000);
 
-		p += sprintf(p, "%u.%u,%u.%u,%u.%u,%u.%u,%u.%u,%u,%u,%u,"
+		p += sprintf(p, "%u.%u,%u.%u,%u.%u,%u.%u,%u.%u,%u.%u,%u,%u,%u,"
 				"%llu,%llu,%d,%d\n",
 				tp_max / 10, tp_max % 10,
 				tp_avg / 10, tp_avg % 10,
+				tp_5_percent_q / 10, tp_5_percent_q % 10,
 				eprob / 10, eprob % 10,
 				mrs->prob_ewmsd / 10, mrs->prob_ewmsd % 10,
 				prob / 10, prob % 10,
Index: compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel.h
===================================================================
--- compat-wireless-2014-11-04.orig/net/mac80211/rc80211_minstrel.h	2015-02-05 15:48:36.290501395 +0100
+++ compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel.h	2015-02-05 15:48:36.286501314 +0100
@@ -160,6 +160,7 @@
 void minstrel_calc_rate_stats(struct minstrel_rate_stats *mr);
 int minstrel_get_tp_avg(struct minstrel_rate *mr);
 int minstrel_get_tp_max(struct minstrel_rate *mr);
+int minstrel_get_tp_5_percent_quantile(struct minstrel_rate *mr);
 
 /* debugfs */
 int minstrel_stats_open(struct inode *inode, struct file *file);
Index: compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel_ht.c
===================================================================
--- compat-wireless-2014-11-04.orig/net/mac80211/rc80211_minstrel_ht.c	2015-02-05 15:48:36.290501395 +0100
+++ compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel_ht.c	2015-02-05 16:18:16.858521831 +0100
@@ -367,6 +367,41 @@
 	return tp_max;
 }
 
+/* return the 5%-Quantile of probability:
+ * the true value of probability lies with a probability of ~95%
+ * above the calculated bound: ø(prob) - 2*σ(prob) */
+static int
+minstrel_ht_get_prob_5_percent_quantile(struct minstrel_ht_sta *mi, int group,
+					int rate)
+{
+	struct minstrel_rate_stats *mrs;
+	int prob_ewma, prob_sd;
+
+	mrs = &mi->groups[group].rates[rate];
+	prob_ewma = MINSTREL_TRUNC(mrs->prob_ewma * 1000);
+	prob_sd = mrs->prob_ewmsd;
+
+	if (prob_ewma > 2 * prob_sd)
+		return (prob_ewma - 2 * prob_sd);
+	else
+		return 0;
+}
+
+/* return the 5%-Quantile of throughput:
+ * the true value of throughput is with a probability of ~95%
+ * above the calculated bound: ø(thr) - 2*σ(thr) */
+int
+minstrel_ht_get_tp_5_percent_quantile(struct minstrel_ht_sta *mi, int group,
+				      int rate)
+{
+	int tp_max, prob_5_percent_q;
+
+	tp_max = minstrel_ht_get_tp_max(mi, group, rate);
+	prob_5_percent_q = minstrel_ht_get_prob_5_percent_quantile(mi, group,
+								   rate);
+
+	return (tp_max * prob_5_percent_q / 1000);
+}
 
 /*
  * Find & sort topmost throughput rates
Index: compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel_ht_debugfs.c
===================================================================
--- compat-wireless-2014-11-04.orig/net/mac80211/rc80211_minstrel_ht_debugfs.c	2015-02-05 15:48:36.290501395 +0100
+++ compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel_ht_debugfs.c	2015-02-05 15:48:36.286501314 +0100
@@ -19,7 +19,7 @@
 minstrel_ht_stats_dump(struct minstrel_ht_sta *mi, int i, char *p)
 {
 	const struct mcs_group *mg;
-	unsigned int j, tp_max, tp_avg, prob, eprob, tx_time;
+	unsigned int j, tp_max, tp_avg, tp_5_percent_q, prob, eprob, tx_time;
 	char htmode = '2';
 	char gimode = 'L';
 	u32 gflags;
@@ -83,14 +83,16 @@
 
 		tp_max = minstrel_ht_get_tp_max(mi, i, j);
 		tp_avg = minstrel_ht_get_tp_avg(mi, i, j);
+		tp_5_percent_q = minstrel_ht_get_tp_5_percent_quantile(mi, i, j);
 		prob = MINSTREL_TRUNC(mrs->cur_prob * 1000);
 		eprob = MINSTREL_TRUNC(mrs->prob_ewma * 1000);
 
-		p += sprintf(p, "%4u.%1u   %4u.%1u   %3u.%1u   %3u.%1u"
-				"     %3u.%1u %3u   %3u %-3u   "
+		p += sprintf(p, "%4u.%1u   %4u.%1u   %4u.%1u   %3u.%1u   "
+				"%3u.%1u     %3u.%1u %3u   %3u %-3u   "
 				"%9llu   %-9llu\n",
 				tp_max / 10, tp_max % 10,
 				tp_avg / 10, tp_avg % 10,
+				tp_5_percent_q / 10, tp_5_percent_q % 10,
 				eprob / 10, eprob % 10,
 				mrs->prob_ewmsd / 10, mrs->prob_ewmsd % 10,
 				prob / 10, prob % 10,
@@ -130,11 +132,11 @@
 
 	p += sprintf(p, "\n");
 	p += sprintf(p, "              best   ____________rate__________    "
-			"______statistics______    ________last_______    "
-			"______sum-of________\n");
+			"___________statistics__________    ________last"
+			"_______    ______sum-of________\n");
 	p += sprintf(p, "mode guard #  rate  [name   idx airtime  max_tp]  "
-			"[ ø(tp) ø(prob) σ(prob)]  [prob.|retry|suc|att]  [#success | "
-			"#attempts]\n");
+			"[ ø(tp) ø-2σ(tp) ø(prob) σ(prob)]  [prob.|retry|"
+			"suc|att]  [#success | #attempts]\n");
 
 	p = minstrel_ht_stats_dump(mi, MINSTREL_CCK_GROUP, p);
 	for (i = 0; i < MINSTREL_CCK_GROUP; i++)
@@ -168,7 +170,7 @@
 			    struct timeval tv)
 {
 	const struct mcs_group *mg;
-	unsigned int j, tp_max, tp_avg, prob, eprob, tx_time;
+	unsigned int j, tp_max, tp_avg, tp_5_percent_q, prob, eprob, tx_time;
 	char htmode = '2';
 	char gimode = 'L';
 	u32 gflags;
@@ -231,13 +233,15 @@
 
 		tp_max = minstrel_ht_get_tp_max(mi, i, j);
 		tp_avg = minstrel_ht_get_tp_avg(mi, i, j);
+		tp_5_percent_q = minstrel_ht_get_tp_5_percent_quantile(mi, i, j);
 		prob = MINSTREL_TRUNC(mrs->cur_prob * 1000);
 		eprob = MINSTREL_TRUNC(mrs->prob_ewma * 1000);
 
-		p += sprintf(p, "%u.%u,%u.%u,%u.%u,%u.%u,%u.%u,%u,%u,"
+		p += sprintf(p, "%u.%u,%u.%u,%u.%u,%u.%u,%u.%u,%u.%u,%u,%u,"
 				"%u,%llu,%llu,",
 				tp_max / 10, tp_max % 10,
 				tp_avg / 10, tp_avg % 10,
+				tp_5_percent_q / 10, tp_5_percent_q % 10,
 				eprob / 10, eprob % 10,
 				mrs->prob_ewmsd / 10, mrs->prob_ewmsd % 10,
 				prob / 10, prob % 10,
Index: compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel_ht.h
===================================================================
--- compat-wireless-2014-11-04.orig/net/mac80211/rc80211_minstrel_ht.h	2015-02-05 15:48:36.290501395 +0100
+++ compat-wireless-2014-11-04/net/mac80211/rc80211_minstrel_ht.h	2015-02-05 15:48:36.286501314 +0100
@@ -123,5 +123,7 @@
 void minstrel_ht_remove_sta_debugfs(void *priv, void *priv_sta);
 int minstrel_ht_get_tp_avg(struct minstrel_ht_sta *mi, int group, int rate);
 int minstrel_ht_get_tp_max(struct minstrel_ht_sta *mi, int group, int rate);
+int minstrel_ht_get_tp_5_percent_quantile(struct minstrel_ht_sta *mi, int group,
+					  int rate);
 
 #endif
