#!/bin/sh
. /tmp/loader

if [ "$2" = "use_recent" ]; then

	OUT_OLSR="/tmp/olsr_output_recent"
else
	case $1 in
		gateways) OUT_OLSR="$( _olsr neighs all )" || exit 1 ;;
		       *) OUT_OLSR="$( _olsr neighs     )" || exit 1 ;;
	esac

	cp $OUT_OLSR /tmp/olsr_output_recent
fi

case $1 in		# all those functions must care about removing $OUT_OLSR !
	meshrdf)
		_olsr neighs_meshrdf_evalable $OUT_OLSR
		[ "$( ls -1 /tmp/olsr_output_* 2>/dev/null | wc -l )" -gt 5 ] && {		# fixme! (dirty workaround)
			_log do olsr_output_garbage_collector daemon debug "removing >5 cadaver's"
			rm /tmp/olsr_output_*
		}
	;;
	gateways)
		_olsr gateways_get $OUT_OLSR
	;;
	evalable)
		_olsr neighs_extended_evalable $OUT_OLSR verbose
	;;
	best_wifi_nlq)
		_olsr neigh_nlq_best_wifi $OUT_OLSR	# output like '500' which is 0.500 - output can be <empty>!
	;;
	get_nlq)
		[ -n "$2" ] && _olsr neigh_nlq $OUT_OLSR "$2" "$3" "$4"	
	;;
	check4nonwifi)
		_olsr neigh_check_for_nonwifi $OUT_OLSR
	;;
	check4wifi)
		_olsr neigh_check_for_wifi $OUT_OLSR
	;;
	check4good_non_tunnel_neigh)
		_olsr neigh_check_for_good_non_tunnel $OUT_OLSR || exit 1
	;;
	get_random)
		_olsr neigh_random_get $OUT_OLSR		# returns IP or EMPTY (!)
	;;
	get_random_pair)
		rm $OUT_OLSR
		_olsr neigh_random_pair_from_mesh_evalable "$2"	# fixme! max_cost not yet implemented
	;;
	get_cost2node)
		rm $OUT_OLSR
		_olsr node_evalable "$2"
	;;
	plain)
		cat $OUT_OLSR
		rm $OUT_OLSR
	;;
	help)
		echo "Usage: $0 (meshrdf | evalable | get_nlq | best_wifi_nlq | check4nonwifi | check4wifi | check4good_non_tunnel_neigh | get_random | get_random_pair [max_cost] | get_cost2node node | plain | <empty>)"
		rm $OUT_OLSR
	;;
	*)
		ARG1="$1"

		if [ -z "$ARG1" ]; then
			_olsr neighs_humanreadable $OUT_OLSR		# fixme! +gps +distance +olsrd/ff/fff-version?
		else
			[ "$ARG1" = "." ] && ARG1="127.0.0.1"

			_sanitizer do "$ARG1" numeric check && {			# e.g. 356
				ARG1="$( _ipsystem  do "$ARG1" | grep ^WIFIADR )"
				ARG1="$( _sanitizer do "$ARG1" ip4 )"
			}

			_sanitizer do "$ARG1" ip4 check && {				# e.g. 10.63.127.1
				wget -qO - "http://$ARG1/cgi-bin-tool_fff+?OPT=neigh"
				exit
			}
		
			[ -n "$( _net dns2ip "$ARG1" )" ] && {				# e.g. badeofen-AP.olsr
				wget -qO - "http://$ARG1/cgi-bin-tool_fff+?OPT=neigh"
				exit
			}
		fi
	;;
esac
