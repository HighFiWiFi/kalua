#!/bin/sh

. /bin/needs base vars log scheduler

func_scheduler_vars

ERR=1
while getopts "a:A:s:wrlpou" FLAG; do {

	ERR=0

	case $FLAG in
		a)
			func_scheduler_add "$OPTARG"
		;;
		s)
			sleep "$OPTARG"
		;;
		w)
			echo >/dev/misc/crondog						# fixme! maybe also add cron.minutely here?
			func_log crondogs_friend daemon debug "heartbeat was send"
		;;
		r)
			[ -e /tmp/SEND_ALIVE_FAILED ] && func_scheduler_add 15min_checks move2top	# fixme! this is a hack
			func_scheduler_run
		;;
		l)
			func_scheduler_list_queue
		;;
		A)									# fixme! doubled entrys with -A ?
			[ "$OPTARG" = "watch_hanging_command" ] && {
				pidof S69watch_olsrd_fff+ >/dev/null && continue	# fixme! is a hack (S69...)
			}
			
			func_log user_defined_now daemon debug "start '$OPTARG'"
			COMMAND="$( func_scheduler_task2command "$OPTARG" )"		# fixme! redirecting does not work?!
			$COMMAND
			func_log user_defined_now daemon debug "ready '$OPTARG' ('$COMMAND')"
		;;
		p)
			func_log purge_queues daemon info "removing"
			rm $FILE_SCHEDULER_TMP* $FILE_SCHEDULER $FILE_SCHEDULER_COPY 2>/dev/null
		;;
		o)
			grep -q ^"printdev()" /usr/bin/netparam || {	# fixme! better concept needed, wrong place (but efficient)!
				INCOMING_OLSR_PACKETS_WIRED="$( iptables --line-numbers -nxvL olsr_in_wire 2>/dev/null | sed -n 's/^4[^0-9]*\([0-9]*\)[^0-9]*[0-9]*.*/\1/p' )"
				[ ${INCOMING_OLSR_PACKETS_WIRED:=0} -gt 0 ] && {
					func_log detect_wired_olsr_traffic daemon info "restart olsr-daemon with wired interfaces"
					/etc/init.d/S41build_static_netparam restore_original_netparam
					/etc/init.d/S53olsrd restart
				}
			}
		;;
		u)
			grep -q "kernel: Oops" /var/log/messages && {	# fixme! dirty, but the only chance?
				grep "kern.warn kernel: " /var/log/messages >>/www/everlasting_syslog.txt
				reboot
			}
		;;
		*)
			ERR=1
		;;
	esac
} done

[ "$ERR" = "1" ] && func_scheduler_print_usage && exit 1
