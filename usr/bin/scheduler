#!/bin/sh
. /tmp/loader

ERR=1
while getopts "a:A:s:wrlpou" FLAG; do {

	ERR=0

	case $FLAG in
		a)
			_scheduler add "$OPTARG"
		;;
		s)
			sleep "$OPTARG"
		;;
		w)
			echo >/dev/misc/crondog						# fixme! maybe also add cron.minutely here?
			_log do crondogs_friend daemon debug "heartbeat was send"
		;;
		r)
			[ -e /tmp/SEND_ALIVE_FAILED ] && {				# fixme! this is a hack
				_scheduler queue_list | grep -q 15min_checks || {
					_scheduler add 15min_checks move2top
				}
			}
			_scheduler run
		;;
		l)
			_scheduler queue_list
		;;
		A)									# fixme! doubled entrys with -A ?
			[ "$OPTARG" = "watch_hanging_command" ] && {
				pidof S69watch_olsrd_fff+ >/dev/null && continue	# fixme! is a hack (S69...)
			}
			
			_log do user_defined_now daemon debug "start '$OPTARG'"
			COMMAND="$( _scheduler task2command "$OPTARG" )"		# fixme! redirecting does not work?!
			${COMMAND:-true}
			_log do user_defined_now daemon debug "ready '$OPTARG' ('$COMMAND')"
		;;
		p)
			_scheduler queue_purge
		;;
		o)
			grep -q ^"printdev()" /usr/bin/netparam || {	# fixme! better concept needed, wrong place (but efficient)!
				INCOMING_OLSR_PACKETS_WIRED="$( iptables --line-numbers -nxvL olsr_in_wire 2>/dev/null | sed -n 's/^4[^0-9]*\([0-9]*\)[^0-9]*[0-9]*.*/\1/p' )"
				[ ${INCOMING_OLSR_PACKETS_WIRED:=0} -gt 0 ] && {
					_log do detect_wired_olsr_traffic daemon info "restart olsr-daemon with wired interfaces"
					/etc/init.d/S41build_static_netparam restore_original_netparam
					_olsr daemon restart "detected wired neigh"
				}
			}
			
			IFS='. '; read NOP NOP FIVEMINLOAD NOP </proc/loadavg; unset IFS 
			[ $FIVEMINLOAD -gt 1 ] && _watch topusage_task
		;;
		u)
			grep -q "kernel: Oops" /var/log/messages && {	# fixme! dirty, but the only chance?
				grep "kern.warn kernel: " /var/log/messages >>/www/everlasting_syslog.txt
				reboot
			}
		;;
		*)
			ERR=1
		;;
	esac
} done

[ "$ERR" = "1" ] && _scheduler print_usage && exit 1
