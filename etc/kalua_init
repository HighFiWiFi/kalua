#!/bin/sh

# this outputs an inital small loader which can be sourced for each 'class', e.g. for class 'wifi':
#
# idee: kommentare etc. strippen beim zusammenbau
# idee: methode 'unload' ?
# idee: methode help?
# idee: FUNCNAME fuellen?
# idee: funktionsausrufe innerhalb der klasse optimieren, d.h. innerhalb von _wifi wird der aufruf "_wifi txpwr_get" durch _wifi_txpwr_get ersetzt
#
# todo: _needs ( netparam | vars_old | vars | vars_software | gwcheck | ipsystem )
# todo: option zum entfernen aller logmeldungen? (bzw. nur log-debug)
#
# strip:
# kommentare entfernen
# fuehrende spaces oder tabs entfernen
# trailing spaces oder tabs entfernen
# leerzeilen entfernen
# aufpassen, das dies nicht innerhalb von cat <<EOF EOF passiert


BASEDIR="/etc/kalua"	# scriptbase, simply throw your 'class'-files here e.g. wifi
LOADER="/tmp/loader"	# scripts can source this file and automatically use all 'classes'
POOLDIR="/tmp/kalua"	# all function-scripts are rewritten (stripped) to this dir

mkdir -p "$POOLDIR"

echo  >"$LOADER" "# generated by $0"
echo >>"$LOADER" "export TZ='CET-1CEST-2,M3.5.0/2,M10.5.0/3'"
	
for CLASS in $(find $BASEDIR -type f); do {
	CLASS="$( basename $CLASS )"
								# generate shortpre + method 'show'	
	cat >"$POOLDIR/${CLASS}" <<EOF
_${CLASS}(){ local F=\$1;shift;_${CLASS}_\$F "\$@";}
_${CLASS}_show(){ sed -n "s/^\(.*\) ().*/\1/p" $BASEDIR/${CLASS} | sort ;}
EOF
	cat >>"$POOLDIR/${CLASS}" $BASEDIR/$CLASS		# copy all functions to pool
	COUNT="($( sed -n "s/^\(.*\) ().*/\1/p" $BASEDIR/${CLASS} | wc -l | sed 's/ //g') functions)"

	cat >>"$LOADER" <<EOF
_${CLASS}(){ . $POOLDIR/${CLASS};local F=\$1;shift;_${CLASS}_\$F "\$@";}
EOF

	logger -s "generated shortpre + method 'show' to '$POOLDIR/${CLASS}' ${COUNT}"
} done
