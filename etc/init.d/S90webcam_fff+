#!/bin/sh
. /tmp/loader

# ToDo:
# wenn keine bilder mehr aufgenommen werden,
# muss die webcam.jpg geloescht und neu angelegt werden
# und ein SIGHUP oder restart gemacht werden
# kill -SIGHUP $( pidof motion | cut -d' ' -f1 )

[ ! -e /www/SOFTWARE_FULLY_INSTALLED ] && exit

fkt_prepare ()
{
	if [ ! -e "/dev/video0" ] && [ ! -L "/dev/video0" ]; then
		ln -s "/dev/v4l/video0" "/dev/video0"
	fi
	
	test -f "/www/images/intro.jpg" 	&& rm -f "/www/images/intro.jpg"
	test ! -L "/www/images/intro.jpg" 	&& ln -s "/tmp/webcam.jpg" "/www/images/intro.jpg"
}

fkt_load_module ()
{
	local MODULE_NAME="$1"
	local MODULE_PARAMS="$2"
	
	if [ -z "$( lsmod | sed -n "/^$MODULE_NAME /p" )" ]; then
		logger "fff+ $0 - unloading kernelmodul $MODULE_NAME"
		rmmod "$MODULE_NAME"
	fi

	logger "fff+ $0 - loading kernelmodule $MODULE_NAME with options \"$MODULE_PARAMS\""
	
	_system insmod "$MODULE_NAME" "$MODULE_PARAMS"
}

fkt_unload_module ()
{
	local MODULE_NAME="$1"
	
	logger "fff+ $0 - trying to unload kernelmodule $MODULE_NAME"
	
	rmmod "$MODULE_NAME"
	
	if [ -z "$( lsmod | sed -n "/^$MODULE_NAME /p" )" ]; then
		logger "fff+ $0 - unloading kernelmodule $MODULE_NAME was successful"
	else
		logger "fff+ $0 - error unloading kernelmodule $MODULE_NAME, try manually!"
	fi
}

fkt_load_kernel_modules ()
{
	fkt_load_module videodev
	fkt_load_module pwc leds=0,0
	fkt_load_module pwcx
}

fkt_unload_kernel_modules ()
{
	fkt_unload_module pwcx
	fkt_unload_module pwc
	fkt_unload_module videodev
}

fkt_write_motion_config ()
{
	local FILE="/etc/motion.conf"
	
	logger "fff+ $0 - creating '$FILE'"

	cat >/etc/motion.conf <<EOF
daemon                  on 
quiet                   on 

videodevice             /dev/video0
width                   640            
height                  480

target_dir              /tmp
jpeg_filename           webcam

snapshot_filename       webcam
snapshot_interval       60                          

text_left               "$( uci get system.@system[0].hostname ) ($( uci get system.@admin[0].location ))"
locate                  off			# draw box around moved object

low_cpu                 1                       # only 1 picture per second when no moving
framerate               1                       # maximum per second
EOF
}

fkt_start_picture_grabbing ()
{
	fkt_write_motion_config	
	echo 1 >/dev/video0                                                             # using cam (just to switch off leds)

	touch /tmp/WEBCAM	# means: webcam is in use

	logger "fff+ $0 - starting picture_grabber"
	motion
}

fkt_end_picture_grabbing ()
{
	logger "fff+ $0 - trying to end picture_grabber"

	test -n "$(pidof motion)" && killall    motion
	test -n "$(pidof motion)" && killall -9 motion
}

func_start ()
{
	_webcam probe || exit
	
	fkt_prepare
	fkt_load_kernel_modules
	fkt_start_picture_grabbing
}

func_stop ()
{
	_webcam probe || exit
	
	fkt_prepare
	fkt_end_picture_grabbing
	fkt_unload_kernel_modules	
}

case $1 in
	start)
		func_start
	;;
	stop)
		func_stop
	;;
	restart)
		func_stop
		func_start
	;;
	*)
		echo "Usage: $0 (start|stop|restart)"
	;;
esac
