#!/bin/sh

. /etc/variables_fff+
. /etc/functions_logging_fff+

[ ! -e "$SOFTWARE_FULLY_INSTALLED" ] && exit

fkt_patch_netparam ()
{
	local FUNC="patch_netparam"
	local MODE="$1"
	local ORIG="/rom/usr/bin/netparam"
	local COPY="/usr/bin/netparam"

	[ "$MODE" = "restore" ] && {
		func_log $FUNC daemon info "restoring '$COPY' from '$ORIG' (or copy already made)"
		rm $COPY
		cp $ORIG $COPY
		return
	}
	
	func_log $FUNC daemon info "generating new '$COPY', simulating wifi-olsr-only device"
	
	rm $COPY
	echo -en "#!/bin/sh\n\ncat<<EOF\n"  >$COPY 	# intro of script
	$ORIG | grep -v ANOLSR		   >>$COPY	# original-output in script (without LAN/WAN-OLSR-statements)
	echo -en "\n# attention, look at $0 - this is\n# only a fakefile, original is here: \"$COPY\"\nEOF\n" >>$ORIG
	chmod +x $COPY
}

fkt_check_if_only_wifi_olsr ()
{
	local FUNC="check_if_only_wifi_olsr"
	local FILE="/tmp/table.links.txt"

	WIFIADR_ESCAPED="$(netparam | sed -e '/WIFIADR/!d' -e 's/[^0-9\.]//g' | sed 's/\./\\\./g')"

	wget -O - http://127.0.0.1:2006/neighbours | sed -e '/./{H;$!d;}' -e 'x;/Table: Links/!d;' | sed -e '/0\.00/!d' >$FILE

	COUNT_ALL="$(cat $FILE | wc -l)"
	COUNT_WIFI="$(grep "$WIFIADR_ESCAPED" $FILE | wc -l)"
	
	rm $FILE
	
	if [ "$COUNT_ALL" = "$COUNT_WIFI" ] && [ "$COUNT_WIFI" != "0" ]; then		# fixme! this does not work for tun/tap-neighbours / VPN!
		
		func_log $FUNC daemon info "only wifi-olsr"
	else
		func_log $FUNC daemon info "olsr also (or only) on wired-interfaces"
		return 1
	fi
}

case $1 in
	call)
		fkt_check_if_only_wifi_olsr && {
			fkt_patch_netparam replace
			scheduler -a restart_olsr
		}
	;;
	replace)
		fkt_patch_netparam replace
		scheduler -a restart_olsr
	;;
	recheck)
		. /etc/functions_olsr
		
		OUT_OLSR="$(func_olsr_get_neighbours)" && {
			func_olsr_check_if_any_nonwifi_neigh $OUT_OLSR && {
				func_log recheck daemon info "no need for recheck, there are non_wifi neighbours"
				exit
			}
		}
	
		fkt_patch_netparam restore
		
		func_log recheck daemon info "restart OLSRd using parameters of actual netparam-script"
		/etc/init.d/S53olsrd restart
		
		func_log recheck daemon info "waiting 120 seconds"
		
		fkt_check_if_only_wifi_olsr && {
			fkt_patch_netparam replace
			scheduler -a restart_olsr
		}
	;;
	restart_olsr)
		func_log restart_olsr daemon info "using parameters of actual netparam-script"
		/etc/init.d/S53olsrd restart
	;;
	start)
		scheduler -a "$0 call"	
	;;
	*)
		func_log output_help daemon info "printing"
		echo "Usage: $0 (call|replace|recheck|restart_olsr)"
	;;
esac
