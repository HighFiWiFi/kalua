#!/bin/sh

[ -n "$FAILSAFE" ] && exit

. /etc/functions_base_fff+ && func_need vars old vars_old log

case $1 in
	start)
		. /tmp/NETPARAM        # getting vars: LANDEV, LANNET, LANPRE

		[ -e /tmp/LOWMEM ] && {
			
			for TASK in klogd syslogd resetd dropbear httpd; do {
				pidof $TASK >/dev/null && {
					_log do low_mem_device daemon debug "killing '$TASK'"
					killall $TASK || {
						_log do low_mem_device daemon debug "error during killing '$TASK'"
					}
				}
			} done
			
			[ -e "/etc/init.d/S90olsr-prio" ] && {
				_log do low_mem_device daemon debug "removing QoS-scripts"
				rm -f /etc/init.d/S90olsr-prio
			}
		}

		if [ "$LANOLSR" = "1" ]                             && [ ! -e "$OLSR_LAN" ]; then touch "$OLSR_LAN"; else rm -f "$OLSR_LAN"; fi
		if [ "$WANOLSR" = "1" ]                             && [ ! -e "$OLSR_WAN" ]; then touch "$OLSR_WAN"; else rm -f "$OLSR_WAN"; fi

		PPPOE=0
		test ! -z "$(nvram get pppoe_username)" && let PPPOE+=1
		test ! -z "$(nvram get ppp_username  )" && let PPPOE+=1
		test ! -z "$(nvram get pppoe_passwd  )" && let PPPOE+=1
		test ! -z "$(nvram get ppp_passwd    )" && let PPPOE+=1
		if [ /tmp/PPPOE_NEEDED -eq 4 ] && [ ! -e "/tmp/PPPOE_NEEDED" ]; then touch "/tmp/PPPOE_NEEDED"; else rm -f "/tmp/PPPOE_NEEDED"; fi

		[ -z "$(mount | grep usbfs)" ] && {
			_log do mount_usbfs daemon debug "trying to mount usbfs"
			mount -t usbfs none /proc/bus/usb 2>/dev/null || {
				_log do mount_usbfs daemon debug "no success, no usbfs, nousb?"
			}
		}
	;;
	*)
		echo "Usage: $0 start"
	;;
esac
