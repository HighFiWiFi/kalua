#!/bin/sh
. /tmp/loader

[ -n "$FAILSAFE" ] && exit

case $1 in
	start)
		_db restore
		/www/cgi-bin-welcome* >/dev/null		# generate cached loginpage

		[ -e /tmp/LOWMEM ] && {
			
			for TASK in klogd syslogd resetd dropbear httpd; do {
				pidof $TASK >/dev/null && {
					_log do low_mem_device daemon debug "killing '$TASK'"
					killall $TASK || {
						_log do low_mem_device daemon debug "error during killing '$TASK'"
					}
				}
			} done
			
			[ -e "/etc/init.d/S90olsr-prio" ] && {
				_log do low_mem_device daemon debug "removing QoS-scripts"
				rm -f /etc/init.d/S90olsr-prio
			}
		}

		PPPOE=0
		[ -n "$( uci get network.wan.username )" ] && PPPOE="$(( $PPPOE + 1 ))"
		[ -n "$( uci get network.wan.password )" ] && PPPOE="$(( $PPPOE + 1 ))"

		if [ $PPPOE -eq 2 -a ! -e "/tmp/PPPOE_NEEDED" ]; then
			touch "/tmp/PPPOE_NEEDED"
		else
			rm -f "/tmp/PPPOE_NEEDED"
		fi

		# fixme!
		# newstyle:
		# check first paragraph, which contains "option Mode":
		#
		# sed -e '/./{H;$!d;}' -e 'x;/option Mode/!d;' /etc/config/olsrd | fgrep "Mode" | wc -l 
		#
		# equal 2? -> do something

		case "$( uci get system.@profile[0].name )" in
			tkolleg*)
				[ "$LANADR" = "10.10.2.33" ] && {
					iptables -t nat -I POSTROUTING -s 10.10.0.0/16 -o eth0.1	-j MASQUERADE
					iptables -t nat -I POSTROUTING -d 10.10.0.10			-j MASQUERADE		# drucker
					iptables -t nat -I POSTROUTING -d 10.10.0.2			-j MASQUERADE		# exNT
				}
			;;
			liszt28*)
				_watch usbstick_rehungen
			;;
			aschbach*)
				[ "$LANADR" = "10.10.2.33" ] && {
					ip address add 192.168.134.254/24 dev eth0.1		# kassen gateway
				}
			;;
		esac

		found_specific_hna_offer()
		{
			uci show olsrd | grep -q "olsrd.@Hna4\[.\].netaddr=$1"
		}

		attach_lan_ip()
		{
			ip address show dev $LANDEV | fgrep -q " $1/32 " || {
				_log do attach_lan_ip daemon info "adding $1 to $LANDEV:$2"
				ip address add $1 dev $LANDEV label $LANDEV:$2
			}
		}

		found_specific_hna_offer 6.6.6.5 && attach_lan_ip 6.6.6.5 monitor	# internal monitor aggregator
		found_specific_hna_offer 6.6.6.6 && attach_lan_ip 6.6.6.6 dns
		found_specific_hna_offer 6.6.6.7 && attach_lan_ip 6.6.6.7 userdb
		found_specific_hna_offer 6.6.6.8 && attach_lan_ip 6.6.6.8 tunnelsrv	# only use for ask is_possible?

		[ -z "$( mount | grep usbfs )" ] && {
			_log do mount_usbfs daemon debug "trying to mount usbfs"
			mount -t usbfs none /proc/bus/usb 2>/dev/null || {
				_log do mount_usbfs daemon debug "no success, no usbfs, nousb?"
			}
		}

		[ "$( _firmware updatemode )" = "testing" ] && {
			_firmware update_pmu
		}
	;;
	*)
		echo "Usage: $0 start"
	;;
esac
