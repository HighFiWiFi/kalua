_profile_user_list ()
{
	sed -n 's/^_profile_user_set_\(.*\) ().*/\1/p' /tmp/kalua/profile_user | sort		# fixme! concept?
}

_profile_user_map_name ()	# OUT1: string			# fixme! respect city/region
{								# fixme! safe individual profile, not common profile
	case $1 in
		backbone_mesh_band_g)	echo "weimarnetz_backbone_mesh" ;;
		standard_mesh_band_g)	echo "weimarnetz_standard_mesh" ;;
		standard_ap_band_g)	echo "weimarnetz_standard_ap" ;;
		standard_client_band_g) echo "weimarnetz_standard_client" ;;
		standard_mesh_band_a)	echo "weimarnetz_standard_mesh_5ghz" ;;
		*)
			echo "unknown ('$1')"
			return 1
		;;
	esac
}

_profile_user_set_weimarnetz_standard_mesh ()
{
	[ "$1" = "info" ] && {
		echo "Standardeinstellungen fuer Weimar mit dem Weimarer IP-System."
		echo "Auf LAN und WLAN werden per DHCP Adressen vergeben."
		echo "Auf LAN, WAN und WLAN wird OLSR gesprochen."
		echo "Alle Weimarer Firmware-Erweiterungen sind aktiviert."
		echo "Das Funknetzwerk arbeitet im performanten 802.11g-Modus (longslot) auf Kanal 5,"
		echo "nutzt den Mesh-(AdHoc)-Modus mit fixer BSSID, 256-Byte-WLAN-Packetfragmentierung"
		echo "und einer niedrigen Beacon-Aussendung von 1/Sekunde. Broadcast-Pakete"
		echo "(z.b. OLSR) werden fest mit einer 802.11b-Rate von 1.0 Megabit im 802.11b-Modus gesendet."
		echo "Der ACK-Bestaetigungsmechanismus hat die Standard-Einstellung."
		return
	}
	
	eval "$( _ipsystem ffweimar $1 )"

	_profile set_system		"DEFAULTS=true" "HOSTNAME=node${NODE_NUMBER}mesh" "TZ=$( _timezone DE )"
	_profile set_system		"DNS=$( _dnsservers berlin )" "REPOS=$( _reposet ffweimar )" "SERVERS=$( _servers ffweimar )"
	_profile set_wan	        "IP=$WAN_IP"
	_profile set_lan         	"IP=$LAN_IP"  "DHCP=$DHCP_LAN"
	_profile set_wifi		"IP=$WIFI_IP" "DHCP=$DHCP_WIFI"
	_profile set_wifi_phy		"DEFAULTS=true" "MRATE=1000000" "FRAG=256" "BEACON=100" "GMODE=2"
	_profile set_wifi_phy		"MODE=adhoc" "ESSID=weimarnetz" "BSSID=02:ca:ff:ee:ba:be" "CHANNEL=5"
	_profile set_olsr		"DEFAULTS=true"
	_profile set_fff_extensions	"DEFAULTS=true" "NODE_NUMBER=$NODE_NUMBER"
	_profile set_packetfilter	"NAT=off" "FIREWALL=off"
}

_profile_user_set_weimarnetz_backbone_mesh ()
{
	[ "$1" = "info" ] && {
		echo "Entspricht dem Profil 'weimarnetz_standard_mesh', arbeitet aber auf"
		echo "Kanal 13 und mit anderer BSSID."
		return
	}
	
	_profile_user set_weimarnetz_standard_mesh "$1"
	
	_profile set_wifi_phy		"MODE=adhoc" "ESSID=weimarnetz_backbone_2GHz" "BSSID=02:ca:ca:00:ba:be" "CHANNEL=13"
}

_profile_user_set_weimarnetz_standard_mesh_5ghz ()
{
	[ "$1" = "info" ] && {
		echo "Standardeinstellungen fuer Weimar mit dem Weimarer IP-System."
		echo "Auf LAN und WLAN werden per DHCP Adressen vergeben."
		echo "Auf LAN, WAN und WLAN wird OLSR gesprochen."
		echo "Alle Weimarer Firmware-Erweiterungen sind aktiviert."
		echo "Das Funknetzwerk arbeitet im performanten 802.11a-(AdHoc)-Modus."
		echo "Wird eine Atheros-Karte verwendet, werden die madwifi-Treiber im 5 GHz-Outdoor-Modus benutzt."
		return
	}

	_profile_user set_weimarnetz_standard_mesh $1
	
	_profile set_system		"HOSTNAME=node${NODE_NUMBER}mesh5ghz"
	_profile set_wifi_phy		"DEFAULTS=true" "MRATE=6000000" "DISTANCE=5000"
	_profile set_wifi_phy		"MODE=adhoc" "ESSID=weimarnetz" "BSSID=02:ff:ff:ca:00:42" "CHANNEL=42" "BEACON=1000" "RTS=off"
}

_profile_user_set_weimarnetz_standard_ap ()
{
	[ "$1" = "info" ] && {
		echo "Standardeinstellungen fuer Weimar mit dem Weimarer IP-System."
		echo "Auf LAN und WLAN werden per DHCP Adressen vergeben."
		echo "Auf LAN, WAN und WLAN wird OLSR gesprochen."
		echo "Alle Weimarer Firmware-Erweiterungen sind aktiviert."
		echo "Das Funknetzwerk arbeitet im hochkompatiblen-802.11b/g-Master/AP-Modus,"
		echo "ist also nur sinnvoll, wenn mindestens ein zweiter Router per Kabelkopplung"
		echo "angeschlossen wird, der im Mesh-(AdHoc)-Modus arbeitet."
		return
	}			# howto disable wifi-olsr?

	_profile_user set_weimarnetz_standard_mesh $1
	
	_profile set_system		"HOSTNAME=node${NODE_NUMBER}ap"
	_profile set_wifi_phy		"DEFAULTS=true" "MRATE=auto" "MODE=ap" "ESSID=weimarnetz" "CHANNEL=1"
}

_profile_user_set_weimarnetz_standard_client ()
{
	[ "$1" = "info" ] && {
		echo "Noch nicht vollstaendig implementiert - nur fuer Testzwecke von Experten zu benutzen"
		echo "Momentan das Profil darauf abgestimmt, mit einem AP per WIFI-OLSR gekoppelt zu werden."
		# fixme! echo "client-klauschwein, muss wifi-dhcp machen?, essid+evtl.channel merken!"
		return
	}
	
	_profile_user set_weimarnetz_standard_ap $1
	
	_profile set_system		"HOSTNAME=node${NODE_NUMBER}client"
	_profile set_wifi_phy		"DEFAULTS=true" "MRATE=1000000" "MODE=client"
}

_profile_user_set_ejbw_mesh ()		# fixme! block_wifi_access? / LAN_DHCP=0 / static_route / gateway = ipcop / update=0 / wifi_crypt
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_weimarnetz_standard_mesh_5ghz $1

	_profile set_wifi_phy	"MODE=adhoc" "ESSID=ejbw" "BSSID=02:ca:ff:ee:b0:42" "CHANNEL=42"
}

_profile_user_set_elephant_mesh ()
{
	[ "$1" = "info" ] && return 1

	eval "$( _ipsystem ffweimar $1 )"
	
	_profile set_system		"DEFAULTS=true" "HOSTNAME=node${NODE_NUMBER}mesh" "TZ=$( _timezone DE )" "WEBLOGIN=true" "VDS=true"
	_profile set_system		"DNS=$( _dnsservers berlin )" "REPOS=$( _reposet elephant )" "SERVERS=$( _servers elephant )"
	_profile set_wan		"IP=$WAN_IP"
	_profile set_lan		"IP=$LAN_IP"  "DHCP=$DHCP_LAN"
	_profile set_wifi		"IP=$WIFI_IP" "DHCP=$DHCP_WIFI"
	_profile set_wifi_phy		"DEFAULTS=true" "MRATE=6000000" "FRAG=256" "BEACON=10000" "GMODE=2"
	_profile set_wifi_phy		"MODE=adhoc" "ESSID=bb" "BSSID=02:ca:ff:ee:b0:13" "CHANNEL=13" "TXPOWER=40"
	_profile set_olsr		"DEFAULTS=true"
	_profile set_fff_extensions	"DEFAULTS=true" "NODE_NUMBER=$NODE_NUMBER"
	_profile set_packetfilter	"NAT=off" "FIREWALL=off"
}

_profile_user_set_elephant_ap ()
{
	[ "$1" = "info" ] && return 1

	_profile_user set_elephant_mesh $1
	
	_profile set_system		"HOSTNAME=node${NODE_NUMBER}ap"
	_profile set_wifi_phy		"DEFAULTS=true" "MRATE=auto" "GMODE=1" "MODE=ap" "ESSID=Hotel-Elephant" "CHANNEL=1"
}

_profile_user_set_galerie_mesh ()
{
	[ "$1" = "info" ] && return 1

	_profile_user set_elephant_mesh $1

	_profile set_system		"REPOS=$( _reposet galerie )" "SERVERS=$( _servers galerie )"
	_profile set_wifi_phy		"MODE=adhoc" "BSSID=02:ca:ff:ee:ba:be" "MRATE=5500000"
}

_profile_user_set_galerie_ap ()
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_elephant_ap $1

	_profile set_system		"REPOS=$( _reposet galerie )" "SERVERS=$( _servers galerie )"
	_profile set_wifi_phy		"ESSID=www.leipziger-hof.de"
}

_profile_user_set_adagio_mesh ()
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_elephant_mesh $1
	
	_profile set_system		"REPOS=$( _reposet adagio )" "SERVERS=$( _servers adagio )"
	_profile set_wifi_phy		"MODE=adhoc" "BSSID=02:ca:ff:ee:ba:be" "MRATE=5500000"
}

_profile_user_set_adagio_ap ()
{
	[ "$1" = "info" ] && return 1

	_profile_user set_elephant_ap $1
	
	_profile set_system		"REPOS=$( _reposet adagio )" "SERVERS=$( _servers adagio )"
	_profile set_wifi_phy		"ESSID=Hotel-Adagio"
}

_profile_user_set_ffsundi_mesh ()
{
	[ "$1" = "info" ] && {
		echo "Standardeinstellungen fuer Sundi mit dem Sundi-IP-System."
		echo "Auf LAN und WLAN werden per DHCP Adressen vergeben."
		echo "Auf LAN, WAN und WLAN wird OLSR gesprochen."
		echo "Alle Weimarer Firmware-Erweiterungen sind aktiviert."
		echo "Das Funknetzwerk arbeitet im performanten 802.11g-(AdHoc)-Modus."
		return
	}
	
	eval "$( _ipsystem ffsundi $1 )"
	
	_profile set_system		"DEFAULTS=true" "HOSTNAME=node${NODE_NUMBER}mesh" "TZ=$( _timezone DE )" "IPSYSTEM=ffsundi"
	_profile set_system		"DNS=$( _dnsservers ffsundi )" "REPOS=$( _reposet ffsundi )" "SERVERS=$( _servers ffsundi )"
	_profile set_wan		"IP=$WAN_IP"
	_profile set_lan		"IP=$LAN_IP"  "DHCP=$DHCP_LAN"
	_profile set_wifi		"IP=$WIFI_IP" 					# no dhcp! was: "DHCP=$DHCP_WIFI"
	_profile set_wifi_phy		"DEFAULTS=true" "MRATE=6000000" "GMODE=4"
	_profile set_wifi_phy		"MODE=adhoc" "ESSID=sundi.freifunk.net" "BSSID=02:ca:ff:ee:ba:be" "CHANNEL=8"
	_profile set_wifi_phy		"BEACON=5000" "RTS=off"
	_profile set_olsr		"DEFAULTS=true"
	_profile set_fff_extensions	"DEFAULTS=true" "NODE_NUMBER=$NODE_NUMBER"
	_profile set_packetfilter	"NAT=off" "FIREWALL=off"
}

_profile_user_set_liszt28_mesh ()
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_elephant_mesh $1
	
	_profile set_system		"REPOS=$( _reposet liszt28 )" "SERVERS=$( _servers liszt28 )"
	_profile set_wifi_phy		"MODE=adhoc" "BSSID=02:ca:ff:ee:ba:be" "MRATE=6000000"
}

_profile_user_set_liszt28_ap ()
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_elephant_ap $1
	
	_profile set_system		"REPOS=$( _reposet liszt28 )" "SERVERS=$( _servers liszt28 )"
	_profile set_wifi_phy		"ESSID=lisztstrasse28"
}

_profile_user_set_sachsenhausen_mesh ()
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_elephant_mesh $1
	
	_profile set_system		"REPOS=$( _reposet sachsenhausen )" "SERVERS=$( _servers sachsenhausen )"
	_profile set_wifi_phy		"MODE=adhoc" "BSSID=02:ca:ff:ee:ba:be" "MRATE=5500000"
}

_profile_user_set_sachsenhausen_ap ()
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_elephant_ap $1
	
	_profile set_system		"REPOS=$( _reposet sachsenhausen )" "SERVERS=$( _servers sachsenhausen )"
	_profile set_wifi_phy		"ESSID=Sachsenhausen"
}

_profile_user_set_lisztwe_mesh ()
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_elephant_mesh $1

	_profile set_system		"REPOS=$( _reposet lisztwe )" "SERVERS=$( _servers lisztwe )"
	_profile set_wifi_phy		"MODE=adhoc" "BSSID=02:ca:ff:ee:ba:be" "MRATE=6000000"
}

_profile_user_set_lisztwe_ap ()		# dns=192.168.99.254
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_elephant_ap $1
	
	_profile set_system		"REPOS=$( _reposet lisztwe )" "SERVERS=$( _servers lisztwe )"
	_profile set_wifi_phy		"ESSID=Hotel-Liszt"
}

_profile_user_set_versilia_mesh ()
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_weimarnetz_standard_mesh $1

	_profile set_system		"REPOS=$( _reposet versilia )" "SERVERS=$( _servers versilia )" "WEBLOGIN=true"
	_profile set_wifi_phy		"ESSID=Ristorante_Versilia" "CHANNEL=13"
}

_profile_user_set_versilia_ap ()
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_versilia_mesh $1

	_profile set_wifi_phy		"DEFAULTS=true" "MRATE=auto" "GMODE=1" "MODE=ap" "CHANNEL=1"
}

_profile_user_set_versilia_client ()
{
	[ "$1" = "info" ] && return 1
	
	_profile_user set_versilia_ap $1

	_profile set_wifi_phy		"MODE=client"
}

_dnsservers ()
{
	local SERVERSET="$1"
	
	case $SERVERSET in
		 berlin) echo -n "81.169.139.12;212.91.230.58;208.67.222.222" ;;
		ffsundi) echo -n "10.10.4.2;81.169.139.12;212.91.230.58" ;;
	esac
}

_timezone ()
{
	case $1 in
		DE) echo -n "CET-1CEST-2,M3.5.0/2,M10.5.0/3" ;;
	esac
}

_servers ()
{
	local NETWORK="$1"
	
	case $NETWORK in
		versilia|elephant|galerie|ffweimar|ffsundi|lisztwe|liszt28|sachsenhausen|adagio)
			_servers_bittorfwireless $NETWORK
		;;
	esac
}

_servers_bittorfwireless ()	# 84.38.67.43 = intercity-vpn.de
{
	local NETWORK="$1"
	
	echo -n "intercity-vpn.de/firmware;intercity-vpn.de/networks/${NETWORK};weimarnetz.de;87.118.106.19;fe80::216:3eff:fe4f:7f20"
}

_reposet ()
{
	local NETWORK="$1"
	
	case $NETWORK in
		versilia|elephant|galerie|ffweimar|ffsundi|lisztwe|liszt28|sachsenhausen|adagio)
			_reposet_bittorfwireless $NETWORK
		;;
	       essential) echo -n "src essential http://intercity-vpn.de/firmware/broadcom/packages/2.4.30/essential"
		;;
	esac
}

_reposet_bittorfwireless ()
{
	local NETWORK="$1"
	
	echo -n "$( _reposet essential );src ${NETWORK} http://intercity-vpn.de/networks/${NETWORK}/packages"	
}
