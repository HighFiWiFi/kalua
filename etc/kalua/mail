_mail_pop3_check_stats ()	# works with busybox-netcat
{
	local   FUNC="mail_check_pop3_stats"
	local   USER="$( nvram get fff_mail_user )"
	local   PASS="$( nvram get fff_mail_pass )"
	local    OUT=""
	local   LINE
	local NETCAT="nc"
	local SERVER="$( nvram get fff_mail_server_pop3 )"
	local   PORT="$( nvram get fff_mail_server_pop3_port )"
	local     RC=0
	local WINDOW=600						# time in seconds, when pop_before_smtp is valid

	_log do $FUNC user notice "sending data to '$SERVER'"

	OUT="$( echo -e "USER $USER\nPASS $PASS\nSTAT\nQUIT\n" | $NETCAT $SERVER $PORT )"

	RC=$?
	OUT="$( echo "$OUT" | cut -d' ' -f1 | while read LINE; do echo -n "$LINE"; done )"	# remove LF/CR

	if [ $RC -ne 0 ] || [ "$OUT" != "+OK+OK+OK" ]; then				# if all went fine we get 3 x OK
	
		_log do $FUNC user crit "returncode: '$RC' - '$SERVER'-answer: '$OUT' - something went wrong"
	fi
}

_mail_send ()		# todo: we need a simple addressbook for phone,email,shortname,name...
{
	# while read ADDRESS; do {
	# 	_mail send "Team-Weimarnetz" weimarnetz@gmx.de "Weimarnetz-Teilnehmer" $ADDRESS mail.txt
	#	sleep 60
	# } done <addresses.txt

	local           FUNC="mail_send"
	local      FROM_REAL="$1"	# ARG1, string (name,  format: title, surname name  )
	local      FROM_MAIL="$2"	# ARG2, string (email, format: recipient@domain.foo )
	local RECIPIENT_REAL="$3"	# ARG3, string (name)
	local RECIPIENT_MAIL="$4"	# ARG4, string (email)
	local       MAILFILE="$5"	# ARG5, string (name of file with body-text and variables)
	local           VAR1="$6"	# ARG6, string (user-defineable, for using in mail.txt)
	local           VAR2="$7"	# ARG7, string
	local           VAR3="$8"	# ARG8, string

	[ ! -e "$MAILFILE" ] && {
		_log do $FUNC user crit "can't read '$MAILFILE' - aborting (usage: _$FUNC myname me@world.org yourname you@world.org mailfile"
		return
	}
	
	local SUBJECT="$( head -n1 $MAILFILE | sed "s#\$VAR1#$VAR1#g" )"
	local OUT LINE
	local NETCAT="nc"
	local SERVER="$( nvram get fff_mail_server_smtp )"
	local PORT="$( nvram get fff_mail_server_smtp_port )"
	local RC=0
	local FQDN="$( nvram get wan_hostname ).local"
	local ADMIN_REAL="$( nvram get ff_adm_name )"
	local ADMIN_MAIL="$( nvram get ff_adm_mail )"
	local MAIL="/tmp/outgoing_mail_$( _system date humanreadable nice )"
	
	_mail pop3_check_stats			# pop before smtp must be configured on mailserver

	_do ()
	{
		echo >>$MAIL -n "$1\r\n"
	}
	
	_do "HELO ${FQDN}"
	_do "MAIL FROM: \"${FROM_REAL}\" <${FROM_MAIL}>"
	_do "RCPT TO: \"${RECIPIENT_REAL}\" <${RECIPIENT_MAIL}>"
	_do "DATA"
	_do "From: \"${FROM_REAL}\" <${FROM_MAIL}>"
	_do "To: \"${RECIPIENT_REAL}\" <${RECIPIENT_MAIL}>"			# can be multiple RCPT's:
#	_do "Cc: \"${ADMIN_REAL}\" <${ADMIN_MAIL}>"
	_do "Subject: ${SUBJECT}\r\n"
	_do "Date: $( _system date mail )"
	_do "Message-ID: <$( date +%s%d%b%y-%H_%M )@${FQDN}>"			# 121016909907May08-16_04@buffalo422.local
	_do "MIME-Version: 1.0"
	_do "Content-Type: text/plain; charset=iso-8859-1"
	_do "Content-Transfer-Encoding: quoted-printable"
	_do "Organization: ${ADMIN_REAL}"
	_do "Reply-To: \"${ADMIN_REAL}\" <${ADMIN_MAIL}>"
	_do "X-Mailer: netcat $( $NETCAT --help 2>&1 | grep -i " v" )"
	_do "X-Operating-System: $( cat /proc/version )"
	_do "X-Firmware: $FFF_VERSION / $FFF_PLUS_VERSION / $( grep ^Kit: /etc/freifunk-release )"

	echo >>$MAIL -n "\n"
						# 1st/2nd line is crap	
	sed '3,99!d' $MAILFILE |
	 sed	-e "s#\$VAR1#$VAR1#g" \
		-e "s#\$VAR2#$VAR2#g" \
	 	-e "s#\$VAR3#$VAR3#g" |
	  while read LINE; do {
	  	_do "$LINE"
	  } done
	
	_do ""
	_do "."
	_do "QUIT"

	OUT="$( echo -e "$( cat $MAIL )" | $NETCAT $SERVER $PORT )"
	RC=$?
	
	OUT="$( echo "$OUT" | strings | sed -e 's/ //g' -e 's/^\([0-9]*\).*$/\1_/' | while read LINE; do echo -n "$LINE"; done )"	# extract error-codes + remove LF/CR

												# fixme! for each RCPT we must add an "2502_"
	if [ $RC -ne 0 ] || [ "$OUT" != "220_250_2502_2502_354_2502_2212_" ]; then		# error-codes, when all went fine (RCPT=OK=2502)
	
		_log do $FUNC user crit "error for recipient '${RECIPIENT_MAIL}': returncode: '$RC' - '$SERVER'-answer: '$OUT' - debug file '$MAIL'"
	else
		_log do $FUNC user notice "sent mail to '$RECIPIENT_MAIL' went fine"
		rm "$MAIL"
	fi
}
