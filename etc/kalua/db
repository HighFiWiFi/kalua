_db_backup ()		# fixme! automatically call this after <prio> changes
{
	local FUNC="db_backup"
	local FILE="/www/cgi-bin/db_backup.tgz"

	if tar czf "$FILE" /tmp/DB ; then
		_log do $FUNC daemon info "[ok]"
	else
		_log do $FUNC daemon alert "[err]"
	fi
}

_db_restore ()		# fixme! automatically call this after reboot
{
	local FUNC="db_restore"
	local FILE="/www/cgi-bin/db_backup.tgz"

	if [ -e "$FILE" ]; then
	
		_log do $FUNC daemon info "unarc of '$FILE'"
		rm -fR /tmp/DB

		if tar -C / -xzf "$FILE" ; then
			_log do $FUNC daemon info "[ok]"
		else
			_lgo do $FUNC daemon alert "[err]"
		fi
	else
		_log do $FUNC daemon info "[err] '$FILE' not found"
	fi
}

_db_user ()			# poormens_db: each line has: ID=<integer>;A="";B="";C="";D="";...;   	# autocreated is ID = linenumber = index
{
	local FUNC="db_user"
	local TABLE="$1"
	local ACTION="$2"
	local ID="$3"		# set to 'autoid' when action is 'add'
	local FIXME="$4$5$6$7$8$9${10}${11}${12}${13}${14}"
	local OBJ ELEMENTS REWRITE_VARS SHORT_VAR N LIST VALUE FILL

	case "$TABLE" in
		profile) ELEMENTS="NAME COMMENT AUTOGENERATE TIME_MODEL MAX_TIME MAX_TRAFFIC MAX_SPEED_UP MAX_SPEED_DOWN LANDING_URL COST CURRENCY" ;;
		login)   ELEMENTS="PROFILE_ID COMMENT USERNAME PASSWORD DEVICE_QUANTITY INSTALLED" ;;
		device)  ELEMENTS="USER_ID MAC DEVTYPE LANG FIRSTSEEN LASTSEEN USED_TRAFFIC USED_TIME USED_TRAFFIC_TODAY USED_TIME_TODAY ISOLATION" ;;
		*)
			echo "Usage: _db_user <table> <action>"
			echo "       _db_user profile|login|device list|show <id>|add autoid ...|del <id>|update <id> ..."
			return 1
		;;
	esac

	_log do $FUNC daemon info "table: $TABLE action: $ACTION elements: 3:$3 4:$4 5:$5 6:$6 7:$7 8:$8 9:$9 0:${10} 1:${11} 2:${12} 3:${13} 4:${14}"

	local DIR="/tmp/DB/USER/$TABLE"
	mkdir -p "$DIR"

	case "$ACTION" in
		list)
			[ -e "$DIR/rows" ] || return 1
		
			case "$ID" in
				last)
					sed -n '/A=/=' "$DIR/rows" | tail -n ${4:-1}
				;;
				*)
					sed -n '/A=/=' "$DIR/rows"
				;;
			esac
		;;
		show)
			# [ -n "$4" ] && ELEMENTS="$4"		# fixme! e.g. only output "NAME COMMENT" does not work
		
			for OBJ in $ELEMENTS; do {

				case "$SHORT_VAR" in
					A) SHORT_VAR="B" ;;
					B) SHORT_VAR="C" ;;
					C) SHORT_VAR="D" ;;
					D) SHORT_VAR="E" ;;
					E) SHORT_VAR="F" ;;
					F) SHORT_VAR="G" ;;
					G) SHORT_VAR="H" ;;
					H) SHORT_VAR="I" ;;
					I) SHORT_VAR="J" ;;
					J) SHORT_VAR="K" ;;
					K) SHORT_VAR="L" ;;
					*) SHORT_VAR="A"; OBJ="ID=${ID};${OBJ}" ;;
				esac

				REWRITE_VARS="${REWRITE_VARS}s/${FILL}${SHORT_VAR}=/${FILL}${OBJ}=/;"
				FILL=";"
			} done

			sed -n "${ID}{${REWRITE_VARS}p;q}" "$DIR/rows"		# fixme! return ERROR on nonexisting line
		;;
		del)
			sed -i "${ID}s/^.*/#/" "$DIR/rows"
		;;
		add|update)				# fixme! if add is used, ID=<integer> is not in line?
			case "$ACTION" in
				add) 	N=3 ;;		# args are without ID (is autogenerated)
				update) N=4 ;;
			esac
			
			SHORT_VAR=
			for OBJ in $ELEMENTS; do {
				eval "VALUE=\"\${$N}\""

				case "${VALUE}${TABLE}_${OBJ}" in				# fixme! this a hack? (empty "$VALUE"!)
					login_USERNAME)  VALUE="$( _random_username do )" ;;
					login_PASSWORD)  VALUE="$( _math random_integer 1 99999 fillup )" ;;
					login_INSTALLED) VALUE="$( _system date unixtime )" ;;
				esac

				case "$SHORT_VAR" in
					A) SHORT_VAR="B" ;;
					B) SHORT_VAR="C" ;;
					C) SHORT_VAR="D" ;;
					D) SHORT_VAR="E" ;;
					E) SHORT_VAR="F" ;;
					F) SHORT_VAR="G" ;;
					G) SHORT_VAR="H" ;;
					H) SHORT_VAR="I" ;;
					I) SHORT_VAR="J" ;;
					J) SHORT_VAR="K" ;;
					K) SHORT_VAR="L" ;;
					*) SHORT_VAR="A" ;;
				esac
				
				LIST="${LIST}$SHORT_VAR='$VALUE';"
				N=$(( $N + 1 ))
			} done

			case "$ACTION" in
				add)
					echo "$LIST" >>"$DIR/rows"
				;;
				update)
					sed -i "${ID}s/^.*/ID=$ID;$LIST/" "$DIR/rows"
				;;
			esac
		;;
		id2name)
			sed -n "${ID}s/.*;A='\(.*\)';B=.*/\1/p" "$DIR/rows"	# fixme! hardcoded NAME position (is needed for PROFILE only)
		;;
		name2id)
			sed -n "/;A='${ID}';/=" "$DIR/rows"			# fixme! hardcoded position (dito)
		;;
		*)
			echo "Usage: ..."
		;;
	esac
}
