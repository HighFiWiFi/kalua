_file_size ()	# if we have a busybox without 'stat'-command compiled
{		# ls is much faster, than a 'wc -c /path/to/10mb-file'

	local FILE="$1"
	local UNIT="$2"

	_fsize ()
	{
		ls -la "$1" 2>/dev/null | sed -n 's/^[^0-9]*[0-9]*[a-zA-Z ]*\([0-9]*\).*/\1/p' || {
			_log do file_size daemon crit "file '$FILE' does't exist"	# fixme! is never reached
			return 1
		}
	}

	[ -n "$UNIT" ] && {	# needs forking
	
		OUT="$( _fsize "$FILE" )"
		
		case $UNIT in
			kb)
				echo -n "$(( ${OUT:-0} / 1024 ))"
			;;
			*)
				echo -n "$OUT"
			;;
		esac
		
		return
	}

	_fsize "$FILE" || return 1
}

_file_lines ()
{
	sed -n '$=' "$1" 2>/dev/null || echo "0"	# same like 'cat nonexistingFILE | wc -l' but nonforking
}

_file_hash ()
{
	local FILE="$1"
	
	md5sum "$FILE" 2>/dev/null | cut -d' ' -f1
}

_file_diskusage ()		# [kilobytes]
{
	local DIR="$1"
	local I=0		# byte-counter

	[ -z "$DIR" ] && DIR="$( pwd )"		# we are lazy on cmdline

	eval "$( ls -lR "$DIR" | sed -n '/^-/s/^[^0-9]*[0-9]*[a-zA-Z ]*\([0-9]*\).*/I=$(( $I + \1 ));/p' )"
	
	echo $I
}
