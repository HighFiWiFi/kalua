_file_convert_binary2text ()
{
	local file="$1"

	if [ ! -e /www/cgi-bin/freifunk-upload ]; then

		/www/cgi-bin/freifunk-upload -b2a <"$file"
	else
		local line

		hexdump -C "$file" |
		 sed -n 's/^[0-9a-f]*\([0-9a-f ]*\)|.*/\1/p' |
		  sed -e 's/  /%/g' -e 's/ /%/g' |
		   while read line; do {
		   	echo -n "$line"
		   done
	fi
}

_file_convert_text2binary ()
{
	local file="$1"
	local buffer

	if [ ! -e /www/cgi-bin/freifunk-upload ]; then

		/www/cgi-bin/freifunk-upload -a2b <"$file"
	else
		buffer="$( cat "$file" )"

		if [ -e /usr/sbin/uhttpd ]; then
			/usr/sbin/uhttpd -d "$buffer"
		else
			/usr/sbin/httpd -d "$buffer"	# fixme! there are many chars not correct
		fi
	fi
}

_file_size ()	# if we have a busybox without 'stat'-command compiled
{		# ls is much faster, than a 'wc -c /path/to/10mb-file'

	local FILE="$1"
	local UNIT="$2"

	_fsize ()
	{
		ls -la "$1" 2>/dev/null | sed -n 's/^[^0-9]*[0-9]*[a-zA-Z ]*\([0-9]*\).*/\1/p' || {
			_log do file_size daemon crit "file '$FILE' does't exist"	# fixme! is never reached
			return 1
		}
	}

	# bug, when user/group is numeric:
	# root@oss47dach:~ _file size "/etc/init.d/S54batman_fff+"
	# 1000
	# root@oss47dach:~ ls -l /etc/init.d/S54batman_fff+
	# -rwxr-xr-x    1 1000     1000            0 Jan  3 16:50 /etc/init.d/S54batman_fff+

	[ -n "$UNIT" ] && {	# needs forking
	
		OUT="$( _fsize "$FILE" )"
		
		case $UNIT in
			kb)
				echo -n "$(( ${OUT:-0} / 1024 ))"
			;;
			*)
				echo -n "$OUT"
			;;
		esac
		
		return
	}

	_fsize "$FILE" || return 1
}

_file_lines ()		# fixme! output of 0 only works, if file does not exist, but not when really 0 bytes
{
	sed -n '$=' "$1" 2>/dev/null || echo "0"	# same like 'cat nonexistingFILE | wc -l' but nonforking
}

_file_hash ()
{
	local FILE="$1"
	
	md5sum "$FILE" 2>/dev/null | cut -d' ' -f1
}

_file_diskusage ()		# [bytes]
{
	local DIR="$1"
	local I=0		# byte-counter

	[ -z "$DIR" ] && DIR="$( pwd )"		# we are lazy on cmdline

	eval "$( ls -lR "$DIR" | sed -n '/^-/s/^[^0-9]*[0-9]*[a-zA-Z ]*\([0-9]*\).*/I=$(( $I + \1 ));/p' )"
	
	echo $I
}
