_math_random_integer ()		# OUT1: integer, higher or equal => $START and lower or equal <= $END
{
	local START="$1"
	local END="$2"

	[ -z "$START" ] && echo -n 0 && return

	local DIFF=$(( $END + 1 - $START ))
	local SEED="$( dd if=/dev/urandom bs=2 count=1 2>&- | hexdump | if read line;then echo 0x${line#* };fi )" # 0x6f2d
	local RANDOM="$(( $SEED % $DIFF ))"	# min=0 ... max=$DIFF
	
	echo -n $(( $START + $RANDOM ))
}

_math_divide100 ()	# SENS: cuts off the last 2 digits: 976 -> 9
{
	local VALUE="$1"

	[ "$VALUE" 2>/dev/null -lt 100 ] && VALUE="100"		# this leads to never a zero - is this good?

	echo -n $VALUE | sed -n 's/^\([0-9].*\)[0-9][0-9]$/\1/p'	# cut last 2 digits
}

_math_divide10 ()	# SENS: sets point in front of last digit 976 = 97.6
{
	local VALUE="$1"
	
	[ $VALUE -lt 10 ] && VALUE="0${VALUE}"			# leading zero, looks better ".4 -> 0.4"

	echo -n $VALUE | sed -n 's/^\(.*\)\([0-9]\)$/\1\.\2/p'	# 976 = 97.6 , ash can't calc with floats
}
