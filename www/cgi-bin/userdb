#!/bin/sh
. /tmp/loader

# fixme! typische Einheiten fuer alle Werte anbieten und intern korrekt rechnen:
#        [Minuten|Stunden|Tage|Monate|Jahr]
#        [kb|mb|gb]
#        [euro|dollar|...]
# fixme! neuerzeugen von profil, aber altes als vorlage nehmen
# fixme! 5 tickets erzeugen = 6 tickets!

toggle ()
{
	local VALUE_NOW="$1"
	local VALUE_A="$2"
	local VALUE_B="$3"
	
	if [ "$VALUE_NOW" = "$VALUE_B" ]; then
		echo "$VALUE_A"
	else
		echo "$VALUE_B"
	fi
}

_http header_mimetype_output "text/html"
eval $( _http query_string_sanitize )

cat <<EOF
<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.01//EN' 'http://www.w3.org/TR/html4/strict.dtd'>
<html><head><title>WLAN-System: Benutzerverwaltung</title>
<META HTTP-EQUIV='cache-control' CONTENT='no-cache'></head><body bgcolor='white'>
EOF

AMP="&amp;"
ARROW="<b>&rarr;</b>"
_userdb include

[ -n "$FORM_ACTION_LOGIN_DEL" ] && {
	FORM_ACTION="login_del"
	[ -n "$FORM_CB" ] && {
		LIST_FORM_CHECKBOX="$( _http query_string_group2list FORM_CB_ )"
		
		for FORM_ID in $LIST_FORM_CHECKBOX; do {
			_userdb login del "$FORM_ID"
		} done
		
		FORM_ACTION="login_show"
	}
}

case "$FORM_ACTION" in
	profile_del)
		_userdb profile del "$FORM_ID"
		FORM_ACTION=
	;;
	login_del)
		_userdb login del "$FORM_ID"
		FORM_ACTION=login_show
	;;
esac

case "$FORM_ACTION" in
	profile_add|profile_update)
		echo "<h3> Benutzerverwaltung $ARROW <a href='?FORM_ACTION='>Hauptmen&uuml;</a> $ARROW Profil bearbeiten </h3>"

		case "$FORM_ACTION" in
			profile_update)
				[ -n "$FORM_NAME" ] && {
					_userdb profile update "$FORM_ID" "$FORM_NAME" "$FORM_COMMENT" "$FORM_AUTOGENERATE" "$FORM_TIME_MODEL" "$FORM_MAX_TIME" "$FORM_MAX_TRAFFIC" "$FORM_MAX_SPEED_UP" "$FORM_MAX_SPEED_DOWN" "$FORM_LANDING_URL" "$FORM_COST" "$FORM_CURRENCY"
				}			
			;;
			profile_add)
				_userdb profile add "Name nicht vergeben"			# creat new and...
				for FORM_ID in $( _userdb profile list ); do :; done		# fetch last ID
			;;
		esac	

		eval $( _userdb profile show $FORM_ID )

		echo "<form action='' method='get'>"
		echo "<input type='hidden' name='FORM_ACTION' value='profile_update'>"
		echo "<input name='FORM_ID' type='hidden' value='$ID'>"
		echo "ID: $ID<br>"
		echo "Name: <input name='FORM_NAME' type='text' value='$NAME'><br>"
		echo "Kommentar: <input name='FORM_COMMENT' type='text' value='$COMMENT'><br>"
		echo "Automatisches erzeugen: <input name='FORM_AUTOGENERATE' type='radio' name='AUTOGENERATE' value='1' $( test "$AUTOGENERATE" = "1" && echo checked )>ja&nbsp;<input name='FORM_AUTOGENERATE' type='radio' name='AUTOGENERATE' value='0' $( test "${AUTOGENERATE:-0}" = "0" && echo checked )>nein<br>"
		echo "Abrechnungsmodell: <input name='FORM_TIME_MODELL' type='radio' name='TIME_MODEL' value='1' $( test "$TIME_MODEL" = "1" && echo checked )>vergangene&nbsp;Zeit&nbsp;&nbsp;<input name='FORM_TIME_MODEL' type='radio' name='TIME_MODEL' value='0' $( test "${AUTOGENERATE:-0}" = "0" && echo checked )>benutzte&nbsp;Zeit<br>"
		echo "G&uuml;ltigkeitsdauer [min]: <input name='FORM_MAX_TIME' type='text' value='$MAX_TIME'><br>"
		echo "Maximales Datenvolumen: [kb]: <input name='FORM_MAX_TRAFFIC' type='text' value='$MAX_TRAFFIC'><br>"
		echo "Maximale Upload-Geschwindigkeit [kb/s]: <input name='FORM_MAX_SPEED_UP' type='text' value='$MAX_SPEED_UP'><br>"
		echo "Maximale Download-Geschwindigkeit [kb/s]: <input name='FORM_MAX_SPEED_DOWN' type='text' value='$MAX_SPEED_DOWN'><br>"
		echo "Landeseite URL: <input name='FORM_LANDING_URL' type='text' value='$LANDING_URL'><br>"
		echo "Verkaufspreis: <input name='FORM_COST' type='text' value='$COST'><br>"
		echo "W&auml;hrung: <input name='FORM_CURRENCY' type='text' value='$CURRENCY'><br>"
		echo "<input type='submit' name='' value='Eintr&auml;ge aktualisieren'></form>"
	;;
	login_add|login_update)
		echo "<h3> Benutzerverwaltung $ARROW <a href='?FORM_ACTION='>Hauptmen&uuml;</a> $ARROW Login bearbeiten </h3>"

		case "$FORM_ACTION" in
			login_add)
				_userdb login add						# create new and...
				for FORM_ID in $( _userdb login list ); do :; done		# fetch last ID
			;;
			login_update)

				helper_update ()
				{
					_userdb login update "$FORM_ID" "$FORM_PROFILE_ID" "$FORM_COMMENT" "$FORM_USERNAME" "$FORM_PASSWORD" "$FORM_DEVICE_QUANTITY" "$FORM_INSTALLED"
				}
			
				case "$FORM_DUPLICATE_NO" in
					1)
						helper_update
					;;
					*)
						FORM_USERNAME=		# does not make sense to have many tickets
						FORM_PASSWORD=		# with same values, this enforces random()
					
						helper_update
						while [ $FORM_DUPLICATE_NO -ne 0 ]; do {

							FORM_DUPLICATE_NO="$(( $FORM_DUPLICATE_NO - 1 ))"

							_userdb login add
							for FORM_ID in $( _userdb login list ); do :; done
							helper_update
						} done
					;;
				esac
			;;
		esac

		profile_selector ()
		{
			local ID NAME COMMENT
			
			echo "Profil: <select name='FORM_PROFILE_ID' size='1'>"
			
			for ID in $( _userdb profile list ); do {
				eval "$( _userdb profile show $ID "NAME COMMENT" )"
				echo "<option value='$ID'>${NAME}: ${COMMENT}</option>"
			} done
		
			echo "</select><br>"
		}
		
		eval $( _userdb login show $FORM_ID )

		echo "<form action='' method='get'>"
		echo "<input type='hidden' name='FORM_ACTION' value='login_update'>"
		echo "<input name='FORM_ID' type='hidden' value='$ID'>"
		echo "ID: $ID<br>"
		
		profile_selector
		
		echo "Kommentar: <input name='FORM_COMMENT' type='text' value='$COMMENT'><br>"
		echo "Benutzername: <input name='FORM_USERNAME' type='text' value='$USERNAME'><br>"
		echo "Passwort: <input name='FORM_PASSWORD' type='text' value='$PASSWORD'><br>"
		echo "Ger&auml;teanzahl: <input name='FORM_DEVICE_QUANTITY' type='text' value='$DEVICE_QUANTITY'><br>"
		echo "<input name='FORM_INSTALLED' type='hidden' value='$( _system date unixtime )'>"

		case "$FORM_ACTION" in
			login_add)
				echo "Anzahl der Kopien: <input name='FORM_DUPLICATE_NO' type='text' value='1'><br>"
			;;
			*)
				echo "<input name='FORM_DUPLICATE_NO' type='hidden' value='1'>"
			;;
		esac
		
		echo "<input type='submit' name='' value='Eintr&auml;ge aktualisieren'></form>"
	;;
	login_show)
		echo "<h3> Benutzerverwaltung $ARROW <a href='?FORM_ACTION='>Hauptmen&uuml;</a> $ARROW <a href='?FORM_ACTION=login_show'>Login &Uuml;bersicht</a> </h3>"
	
		echo "<form action='' method='get'>"
		echo "<table cellspacing='1' cellpadding='1' border='1'>"
		echo "<tr><td>&nbsp;<input type='hidden' name='FORM_CB' value='0'></td><td>ID</td><td>Profil</td><td>Kommentar</td><td>Benutzername</td><td>Passwort</td><td>Ger&auml;tezahl</td><td>Erstellungszeit</td><td>&nbsp;</td></tr>"

		# fixme! erstellungszeit menschenlesbar, "vor 5 minuten"?
	
		for ID in $( _userdb login list ); do {
			eval "$( _userdb login show $ID )"
			BGCOLOR="$( toggle "$BGCOLOR" "#FAEBD7" "#DCDCDC" )"
			echo "<tr bgcolor='$BGCOLOR'><td><input type='checkbox' ID='login$ID' name='FORM_CB_$ID' value='1'></td><td><label for='login$ID'>$ID</label></td><td><label for='login$ID'>$( _userdb profile id2name $PROFILE_ID )</label></td><td><label for='login$ID'>$COMMENT</label></td><td><label for='login$ID'>$USERNAME</label></td><td><label for='login$ID'>$PASSWORD</label></td><td><label for='login$ID'>$DEVICE_COUNT</label></td><td><label for='login$ID'>$INSTALLED</label></td><td><a href='?FORM_ACTION=login_del${AMP}FORM_ID=$ID'>l&ouml;schen</a></td></tr>"
		} done
		
		echo "</table>"
		echo "<input type='submit' name='FORM_ACTION_LOGIN_DEL' value='l&ouml;schen'></form>"
	;;
	*)
		cat <<EOF
<h3>Benutzerverwaltung $ARROW <a href='?FORM_ACTION='>Hauptmen&uuml;</a></h3>
<p>
<ul>
	<li>Benutzerprofile verwalten:</li>
	<ul>
		<li>neues Profil <a href='?FORM_ACTION=profile_add'>erstellen</a></li>
EOF
		
		LIST_PROFILES="$( _userdb profile list )"

		[ -n "$LIST_PROFILES" ] && {
			echo "<li>ein Profil bearbeiten:</li><ul>"

			for ID in $LIST_PROFILES; do {
				eval "$( _userdb profile show $ID "NAME COMMENT" )"
				echo "<li>$NAME ('$COMMENT') <a href='?FORM_ACTION=profile_update${AMP}FORM_ID=${ID}'>bearbeiten</a> | "
				echo "<a href='?FORM_ACTION=profile_del${AMP}FORM_ID=${ID}'>l&ouml;schen</a></li>"		# fixme! only show, if no deps (login|devices)
			} done

			echo "</ul>"
		}	
		
		cat <<EOF
	</ul>
</p>
<p>
	<li>Logins verwalten:</li>
	<ul>
EOF
		if [ -n "$LIST_PROFILES" ]; then
			echo "<li>neue Logins <a href='?FORM_ACTION=login_add'>erstellen</a></li>"
		else
			echo "<li>neue Logins <s>erstellen</s> (zuerst muss ein Profil angelegt werden)</li>"
		fi

		LIST_LOGINS="$( _userdb login list )"

		[ -n "$LIST_LOGINS" ] && {
			echo "<li>Logins <a href='?FORM_ACTION=login_show'>anzeigen</a> ($( echo $LIST_LOGINS | wc -l ))</li>"
		}
		
		cat <<EOF
	</ul>
</p>
<p>
	<li>Ger&auml;te verwalten:</li>
	<ul>
EOF
		LISTE_DEVICES="$( _userdb device list )"
		
		if [ -n "$LIST_LOGINS" ]; then
			echo "<li>neue Ger&auml;te <a href='?FORM_ACTION=device_add'>eintragen</a></li>"
		else
			echo "<li>neue Ger&auml;te <s>eintragen</s> (zuerst muss ein Login angelegt werden)</li>"
		fi
		
		[ -n "$LISTE_DEVICES" ] && {
			echo "<li>Ger&auml;te anzeigen</li>"
		}

		cat <<EOF
	</ul>
</p>
</ul>
EOF
	;;
esac

echo "</body></html>"
