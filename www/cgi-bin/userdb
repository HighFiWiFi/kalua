#!/bin/sh
. /tmp/loader

# fixme! typische Einheiten fuer alle Werte anbieten und intern korrekt rechnen:
#        [Minuten|Stunden|Tage|Monate|Jahr]
#        [kb|mb|gb]
#        [euro|dollar|...]
#
# fixme! neuerzeugen von profil, aber altes als vorlage nehmen
# fixme! 5 tickets erzeugen = 6 tickets!

_log do userdb daemon info "query: '$QUERY_STRING'"

eval $( _http query_string_sanitize )

AMP="&amp;"
BG_0="lightblue"
BG_A="#FAEBD7"
BG_B="#DCDCDC"
ARROW="<b>&rarr;</b>"
_userdb include


if [ -n "$FORM_ACTION_LOGIN_DEL_CHECKED" -o -n "$FORM_ACTION_LOGIN_DEL_RANGE" ]; then

	FORM_ACTION="login_del"

	[ -n "$FORM_CB" ] && {
		LIST_FORM_CHECKBOX="$( _http query_string_group2list FORM_CB_ )"
	}
	
	[ -z "$LIST_FORM_CHECKBOX" ] && {
		LIST_FORM_CHECKBOX="$( _userdb login list $FORM_RANGE_METHOD $FORM_RANGE_KEYWORD )"
	}

	_log do login_del_specific daemon info "list: '$LIST_FORM_CHECKBOX'"
	for FORM_ID in $LIST_FORM_CHECKBOX; do {
		_userdb login del "$FORM_ID"
	} done
	
	FORM_ACTION="login_show"
fi

if [ -n "$FORM_ACTION_LOGIN_PRINT_CHECKED" -o -n "$FORM_ACTION_LOGIN_PRINT_RANGE" ]; then

	FORM_ACTION="login_show"

	_log do gui_print_tickets daemon info "[init]" 
	
	[ -n "$FORM_CB" ] && {
		LIST_FORM_CHECKBOX="$( _http query_string_group2list FORM_CB_ )"
	}
	
	[ -z "$LIST_FORM_CHECKBOX" ] && {
		LIST_FORM_CHECKBOX="$( _userdb login list $FORM_RANGE_METHOD $FORM_RANGE_KEYWORD )"
	}

	I=0; for N in $LIST_FORM_CHECKBOX; do I=$(( $I + 1 )); done 		# count tickets
	for LOGIN_ID in $LIST_FORM_CHECKBOX; do break; done			# fetch first ticket
	eval $( _userdb login show $LOGIN_ID "PROFILE_ID" )			# used_profile_id
	eval $( _userdb profile show $PROFILE_ID "NAME" )			# id2name
		
	FILENAME="wlansystem-$( _weblogin metadata_locationname )-$( _system date humanreadable )-${I}x${NAME}.pdf"
#	FILENAME="$( _sanitizer do "$FILENAME" urlvalue )"
	FILENAME="$( echo "$FILENAME" | sed -e 's/ //g' -e 's/:/uhr/g' )"	# strip spaces, replace ":"

	_log do gui_print_tickets daemon info "filename: '$FILENAME' list: '$LIST_FORM_CHECKBOX'"

	_http header_mimetype_output "application/pdf" "$FILENAME"
	_userdb login_pdfout "$LIST_FORM_CHECKBOX"

	_log do gui_print_tickets daemon info "[done]"
	exit	
fi

case "$FORM_ACTION" in
	profile_del)
		_userdb profile del "$FORM_ID"
		FORM_ACTION=
	;;
	login_del)
		_userdb login del "$FORM_ID"
		FORM_ACTION=login_show
	;;
esac


_http header_mimetype_output "text/html"

cat <<EOF
<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.01//EN' 'http://www.w3.org/TR/html4/strict.dtd'>
<html><head><title>WLAN-System: Rechteverwaltung</title>
<META HTTP-EQUIV='cache-control' CONTENT='no-cache'></head><body bgcolor='white'>
EOF


case "$FORM_ACTION" in
	profile_add|profile_update)
		echo "<h3> Rechteverwaltung $ARROW <a href='?FORM_ACTION='>Hauptmen&uuml;</a> $ARROW Profil bearbeiten </h3>"

		SUBMIT_BUTTON_TEXT="Profil anlegen"
		
		case "$FORM_ACTION" in
			profile_update)

				[ -n "$FORM_NAME" ] && {

					case "$FORM_MAX_TIME_UNIT" in		# default/internal: 'minutes'
						 hours)	FORM_MAX_TIME="$(( $FORM_MAX_TIME * 60 ))" ;;
						  days)	FORM_MAX_TIME="$(( $FORM_MAX_TIME * 1440 ))" ;;
						months) FORM_MAX_TIME="$(( $FORM_MAX_TIME * 43200 ))" ;;
					esac

					case "$FORM_MAX_TRAFFIC_UNIT" in	# default/internal: 'kilobytes'
						mb) FORM_MAX_TRAFFIC="$(( $FORM_MAX_TRAFFIC * 1024 ))" ;;
						gb) FORM_MAX_TRAFFIC="$(( $FORM_MAX_TRAFFIC * 1024 * 1024 ))" ;;
					esac

					case "$FORM_MAX_SPEED_DOWN_UNIT" in	# default/internal: 'kilobytes'
						mb) FORM_MAX_SPEED_DOWN="$(( $FORM_MAX_SPEED_DOWN * 1024 ))" ;;
					esac

					case "$FORM_MAX_SPEED_UP_UNIT" in	# default/internal: 'kilobytes'
						mb) FORM_MAX_SPEED_UP="$(( $FORM_MAX_SPEED_UP * 1024 ))" ;;
					esac

					_userdb profile update "$FORM_ID" "$FORM_NAME" "$FORM_COMMENT" "$FORM_AUTOGENERATE" "$FORM_TIME_MODEL" "$FORM_MAX_TIME" "$FORM_MAX_TRAFFIC" "$FORM_MAX_SPEED_UP" "$FORM_MAX_SPEED_DOWN" "$FORM_LANDING_URL" "$FORM_COST" "$FORM_CURRENCY"
				}			
			
				SUBMIT_BUTTON_TEXT="Profil aktualisieren"
			;;
			profile_add)
				_userdb profile add "Name nicht vergeben"			# create new and...
				for FORM_ID in $( _userdb profile list ); do :; done		# fetch last ID
			;;
		esac	

		eval $( _userdb profile show $FORM_ID )

		echo "<table cellspacing='1' cellpadding='1' border='0'>"
		echo "<form action='' method='get'>"						# currency is coded like ISO-4217
		echo "<input type='hidden' name='FORM_ACTION' value='profile_update'>"
		echo "<input name='FORM_ID' type='hidden' value='$ID'>"
		echo "<tr bgcolor='$BG_0'><td><b>Parameter</b></td><td><b>Wert</b></td><td><b>Erl&auml;uterung</b></td></tr>"
		echo "<tr bgcolor='$BG_B'><td>Name</td><td><input name='FORM_NAME' type='text' size='32' value='$NAME'></td><td>einfacher, kurzer Name</td></tr>"
		echo "<tr bgcolor='$BG_A'><td>Kommentar</td><td><input name='FORM_COMMENT' type='text' size='32' value='$COMMENT'></td><td>ausf&uuml;hrlicher Kommentar</td></tr>"
		echo "<tr bgcolor='$BG_B'><td>Automatisches erzeugen</td><td><input name='FORM_AUTOGENERATE' type='radio' name='AUTOGENERATE' value='1' $( test "$AUTOGENERATE" = "1" && echo checked )>ja<br><input name='FORM_AUTOGENERATE' type='radio' name='AUTOGENERATE' value='0' $( test "${AUTOGENERATE:-0}" = "0" && echo checked )>nein</td><td>wenn Logins f&uuml;r dieses Profil zur Neige gehen, sollen automatisch neue erzeugt werden?</td></tr>"
		echo "<tr bgcolor='$BG_A'><td>Abrechnungsmodell</td><td><input name='FORM_TIME_MODELL' type='radio' name='TIME_MODEL' value='1' $( test "$TIME_MODEL" = "1" && echo checked )>vergangene&nbsp;Zeit<br><input name='FORM_TIME_MODEL' type='radio' name='TIME_MODEL' value='0' $( test "${AUTOGENERATE:-0}" = "0" && echo checked )>benutzte&nbsp;Zeit</td><td>die Zeit l&auml;uft, wenn sich ein Benutzer das erste mal einbucht. Soll die tats&auml;chliche Online-Zeit berechnet werden oder l&auml;uft die Zeit auch weiter, wenn der Benutzer nichts im Netz macht?</td></tr>"
		echo "<tr bgcolor='$BG_B'><td>G&uuml;ltigkeitsdauer</td><td nowrap><input name='FORM_MAX_TIME' type='text' size='10' value='$MAX_TIME'><select size='1' name='FORM_MAX_TIME_UNIT'><option value='minutes' selected>Minuten</option><option value='hours'>Stunden</option><option value='days'>Tage</option><option value='months'>Monate</option></select></td><td>nach dem Abrechnungsmodell erlaubter Zeitrahmen</td></tr>"
		echo "<tr bgcolor='$BG_A'><td>Maximales Datenvolumen</td><td nowrap><input name='FORM_MAX_TRAFFIC' type='text' size='10' value='$MAX_TRAFFIC'><select size='1' name='FORM_MAX_TRAFFIC_UNIT'><option value='kb' selected>Kilobyte</option><option value='mb'>Megabyte</option><option value='gb'>Gigabyte</option></select></td><td>erlaubter Rahmen der gesamten &uuml;bertragenen Datenmenge, Up- ${AMP} Download zusammengerechnet</td</tr>"
		echo "<tr bgcolor='$BG_B'><td>Maximale Upload-Geschwindigkeit</td><td nowrap><input name='FORM_MAX_SPEED_UP' type='text' size='10' value='$MAX_SPEED_UP'><select size='1' name='FORM_MAX_SPEED_UP_UNIT'><option value='kb' selected>Kilobyte/s</option><option value='mb'>Megabyte/s</option></select></td><td>erlaubte Geschwindkeit bei ausgehendem Datenverkehr</td></tr>"
		echo "<tr bgcolor='$BG_A'><td>Maximale Download-Geschwindigkeit</td><td nowrap><input name='FORM_MAX_SPEED_DOWN' type='text' size='10' value='$MAX_SPEED_DOWN'><select size='1' name='FORM_MAX_SPEED_DOWN_UNIT'><option value='kb' selected>Kilobyte/s</option><option value='mb'>Megabyte/s</option></select></td><td>erlaubte Geschwindkeit bei eintreffendem Datenverkehr</td></tr>"
		echo "<tr bgcolor='$BG_B'><td>Internetadresse der Landeseite</td><td><input name='FORM_LANDING_URL' type='text' size='32' value='$LANDING_URL'></td><td>auf diese Seite wird der Benutzer geleitet, nachdem er sein Passwort eingegeben hat, z.b. https://www.google.com</td></tr>"
		echo "<tr bgcolor='$BG_A'><td>Verkaufspreis</td><td nowrap><input name='FORM_COST' type='text' size='10' value='$COST'><select size='1' name='FORM_CURRENCY'><option value='EUR' $( test "$CURRENCY" = "EUR" && echo selected )>Euro</option><option value='USD' $( test "$CURRENCY" = "USD" && echo selected )>US-Dollar</option><option value='VND' $( test "$CURRENCY" = "VND" && echo selected )>&#272;&#7891;ng</option></select></td><td>f&uuml;r die Buchhaltung bzw. revisionssichere Protokollierung</td></tr>"
		echo "<tr bgcolor='$BG_0'><td colspan='2' align='center' valign='middle'>&nbsp;<br><input type='submit' name='' value='$SUBMIT_BUTTON_TEXT'><br>&nbsp;</td><td>&nbsp;</td></tr></form></table>"
	;;
	login_add|login_update)
		echo "<h3> Rechteverwaltung $ARROW <a href='?FORM_ACTION='>Hauptmen&uuml;</a> $ARROW Login bearbeiten </h3>"

		SUBMIT_BUTTON_TEXT="Login anlegen"

		case "$FORM_ACTION" in
			login_add)
				_userdb login add						# create new and...
				for FORM_ID in $( _userdb login list ); do :; done		# fetch last ID
			;;
			login_update)

				SUBMIT_BUTTON_TEXT="Login aktualisieren"

				helper_update ()
				{
					_userdb login update "$FORM_ID" "$FORM_PROFILE_ID" "$FORM_COMMENT" "$FORM_USERNAME" "$FORM_PASSWORD" "$FORM_DEVICE_QUANTITY" "$FORM_INSTALLED"
				}
			
				case "${FORM_DUPLICATE_NO:-1}" in
					1)
						helper_update
					;;
					*)
						FORM_USERNAME=		# does not make sense to have many tickets
						FORM_PASSWORD=		# with same values, this enforces random()
					
						helper_update
						while [ $FORM_DUPLICATE_NO -ne 0 ]; do {

							FORM_DUPLICATE_NO="$(( $FORM_DUPLICATE_NO - 1 ))"

							_userdb login add
							for FORM_ID in $( _userdb login list ); do :; done
							helper_update
						} done
					;;
				esac
			;;
		esac

		profile_selector ()
		{
			local ID NAME COMMENT
			
			echo "Profil: <select name='FORM_PROFILE_ID' size='1'>"
			
			for ID in $( _userdb profile list ); do {
				eval "$( _userdb profile show $ID "NAME COMMENT" )"
				echo "<option value='$ID' $( test "$FORM_PROFILE_ID" = "$ID" && echo selected )>${NAME}: ${COMMENT}</option>"
			} done
		
			echo "</select><br>"
		}
		
		eval $( _userdb login show $FORM_ID )

		echo "<form action='' method='get'>"
		echo "<input type='hidden' name='FORM_ACTION' value='login_update'>"
		echo "<input name='FORM_ID' type='hidden' value='$ID'>"
		echo "ID: $ID<br>"
		
		profile_selector
		
		echo "Kommentar: <input name='FORM_COMMENT' type='text' value='$COMMENT'><br>"
		echo "Benutzername: <input name='FORM_USERNAME' type='text' value='$USERNAME'><br>"
		echo "Passwort: <input name='FORM_PASSWORD' type='text' value='$PASSWORD'><br>"
		echo "Ger&auml;teanzahl: <input name='FORM_DEVICE_QUANTITY' type='text' value='$DEVICE_QUANTITY'><br>"
		echo "<input name='FORM_INSTALLED' type='hidden' value='$( _system date unixtime )'>"

		case "$FORM_ACTION" in
			login_add)
				echo "Anzahl der Kopien: <input name='FORM_DUPLICATE_NO' type='text' value='1'><br>"
			;;
			*)
				echo "<input name='FORM_DUPLICATE_NO' type='hidden' value='1'>"
			;;
		esac
		
		echo "<input type='submit' name='' value='$SUBMIT_BUTTON_TEXT'></form>"
	;;
	login_show)
		echo "<h3> Rechteverwaltung $ARROW <a href='?FORM_ACTION='>Hauptmen&uuml;</a> $ARROW <a href='?FORM_ACTION=login_show'>Login &Uuml;bersicht</a> </h3>"
	
		echo "<form action='' method='get'>"
		echo "<table cellspacing='1' cellpadding='1' border='0'>"
		echo "<tr bgcolor='$BG_0'><td><small>Wahl</small><input type='hidden' name='FORM_CB' value='0'></td><td>&nbsp;ID&nbsp;</td><td>&nbsp;Profil&nbsp;</td><td>&nbsp;Kommentar&nbsp;</td><td>&nbsp;Benutzername&nbsp;</td><td>&nbsp;Passwort&nbsp;</td><td>&nbsp;Ger&auml;tezahl&nbsp;</td><td>&nbsp;Erstellungszeit&nbsp;</td><td>&nbsp;Aktion&nbsp;</td></tr>"

		# fixme! erstellungszeit menschenlesbar, "vor 5 minuten"?
		# fixme! wie leichtes auswaehlen einer gruppe? (35 auswaehlen?)

		case "$FORM_RANGE_METHOD" in
			last)
				echo "<input type='hidden' name='FORM_RANGE_METHOD'  value='$FORM_RANGE_METHOD'>"
				echo "<input type='hidden' name='FORM_RANGE_KEYWORD' value='$FORM_RANGE_KEYWORD'>"
				echo "<p><i>Hinweis:</i> Es werden nur die letzten $FORM_RANGE_KEYWORD Logins angezeigt</p>"
				LIST_ID="$( _userdb login list last $FORM_RANGE_KEYWORD )"
			;;
			*)
				LIST_ID="$( _userdb login list )"
			;;
		esac
	
		for ID in $LIST_ID; do {
		
			PROFILE_ID=
			eval "$( _userdb login show $ID )"
			[ -z "$PROFILE_ID" ] && continue
		
			INSTALLED="$( _system date unixtime2date $INSTALLED )"

			case "$BGCOLOR" in
				"$BG_A") BGCOLOR="$BG_B" ;;
				      *) BGCOLOR="$BG_A" ;;
			esac

			cat <<EOF
<tr bgcolor='$BGCOLOR'>
<td align='middle'><input type='checkbox' ID='login$ID' name='FORM_CB_$ID' value='1'></td>
<td align='right'><label for='login$ID'>$ID&nbsp;</label></td>
<td><label for='login$ID'>&nbsp;$( _userdb profile id2name $PROFILE_ID )</label></td>
<td><label for='login$ID'>&nbsp;$COMMENT</label></td>
<td><label for='login$ID'>&nbsp;$USERNAME</label></td>
<td align='middle'><label for='login$ID'>$PASSWORD</label></td>
<td align='middle'><label for='login$ID'>$DEVICE_QUANTITY</label></td>
<td><label for='login$ID'>$INSTALLED</label></td>
<td>&nbsp;<a href='?FORM_ACTION=login_del${AMP}FORM_ID=$ID'>l&ouml;schen</a>&nbsp;|&nbsp;<a 
href='?FORM_ACTION=login_update${AMP}FORM_ID=$ID${AMP}FORM_PROFILE_ID=$PROFILE_ID${AMP}FORM_COMMENT=$COMMENT${AMP}FORM_USERNAME=$USERNAME${AMP}FORM_PASSWORD=$PASSWORD${AMP}FORM_DEVICE_QUANTITY=$DEVICE_QUANTITY${AMP}$FORM_INSTALLED=$INSTALLED'>bearbeiten</a></a></td>
</tr>
EOF

		} done
		
		echo "</table>"
		echo "<p>Ausgew&auml;hlte Logins "
		echo "<input type='submit' name='FORM_ACTION_LOGIN_DEL_CHECKED' value='l&ouml;schen'>"
		echo "<input type='submit' name='FORM_ACTION_LOGIN_PRINT_CHECKED' value='drucken'>"
		echo "<p>"
		echo "<p>Alle angezeigten Logins "
		echo "<input type='submit' name='FORM_ACTION_LOGIN_DEL_RANGE' value='l&ouml;schen'>"
		echo "<input type='submit' name='FORM_ACTION_LOGIN_PRINT_RANGE' value='drucken'>"
		echo "</form>"
	;;
	*)
		cat <<EOF
<h3>Rechteverwaltung $ARROW <a href='?FORM_ACTION='>Hauptmen&uuml;</a></h3>
<p>
<ul>
	<li><b><big>P</big>rofile</b> verwalten:</li>
	<ul>
		<li>neues Profil <a href='?FORM_ACTION=profile_add'>erstellen</a></li>
EOF
		
		LIST_PROFILES="$( _userdb profile list )"

		[ -n "$LIST_PROFILES" ] && {
			echo "<li>Profile bearbeiten:</li><ul>"

			for ID in $LIST_PROFILES; do {
				eval "$( _userdb profile show $ID "NAME COMMENT" )"
				echo "<li><a href='?FORM_ACTION=profile_update${AMP}FORM_ID=${ID}'>bearbeiten</a> | "
				echo "<a href='?FORM_ACTION=profile_del${AMP}FORM_ID=${ID}'>l&ouml;schen</a>&nbsp;-&nbsp;$NAME$( test -n "$COMMENT" && echo "&nbsp;('$COMMENT')" )</li>"
				# fixme! only show 'del', if no deps (login|devices)
			} done

			echo "</ul>"
		}	
		
		cat <<EOF
	</ul>
</p>
<p>
	<li><b><big>L</big>ogins</b> verwalten:</li>
	<ul>
EOF
		if [ -n "$LIST_PROFILES" ]; then
			echo "<li>neue Logins <a href='?FORM_ACTION=login_add'>erstellen</a></li>"
		else
			echo "<li>neue Logins <s>erstellen</s> (zuerst muss ein Profil angelegt werden)</li>"
		fi

		LIST_LOGINS="$( _userdb login list )"

		[ -n "$LIST_LOGINS" ] && {
		
			LIST_LOGINS_COUNT="$( _userdb login list | wc -l )"
			LIST_LOGINS_COUNT="$(( $LIST_LOGINS_COUNT + 0 ))"
			
			echo "<li>Logins <a href='?FORM_ACTION=login_show${AMP}FORM_RANGE_METHOD=all'>anzeigen&nbsp;($LIST_LOGINS_COUNT St&uuml;ck)</a>"

			[ $LIST_LOGINS_COUNT -gt 10 ] && {
				echo "<ul><li>"
				echo "<li><a href='?FORM_ACTION=login_show${AMP}FORM_RANGE_METHOD=last${AMP}FORM_RANGE_KEYWORD=5'>die neuesten 5</a>,&nbsp;"
				echo "<a href='?FORM_ACTION=login_show${AMP}FORM_RANGE_METHOD=last${AMP}FORM_RANGE_KEYWORD=10'>10</a>,&nbsp;"
				echo "<a href='?FORM_ACTION=login_show${AMP}FORM_RANGE_METHOD=last${AMP}FORM_RANGE_KEYWORD=15'>15</a>,&nbsp;"
				echo "<a href='?FORM_ACTION=login_show${AMP}FORM_RANGE_METHOD=last${AMP}FORM_RANGE_KEYWORD=35'>35</a>"
				echo "</li></ul>"
			}

			echo "</li>"
		}
		
		cat <<EOF
	</ul>
</p>
<p>
	<li><b><big>G</big>er&auml;te</b> verwalten:</li>
	<ul>
EOF
		LISTE_DEVICES="$( _userdb device list )"
		
		if [ -n "$LIST_LOGINS" ]; then
			echo "<li>neue Ger&auml;te <a href='?FORM_ACTION=device_add'>eintragen</a></li>"
		else
			echo "<li>neue Ger&auml;te <s>eintragen</s> (zuerst muss ein Login angelegt werden)</li>"
		fi
		
		[ -n "$LISTE_DEVICES" ] && {
			echo "<li>Ger&auml;te anzeigen</li>"
		}

		cat <<EOF
	</ul>
</p>
</ul>
EOF
	;;
esac

echo "</body></html>"
