# func_toggle_values
# func_admingui_get_action
# func_admingui_links2category
# func_admingui_javascript
# func_admingui_user_add_form_was_send
# func_admingui_user_add_form
# func_admingui_user_add_form_get_elements
# func_db_init
# func_db_profile
# func_db_devices


# todo
#
# - user-editor: 
#   - werte uebernehmen und tabelle anlegen, wenn noch nicht vorhanden
#   - user anzeigen
#
# - profil-editor: neues profil = muell-profil erzeugen + dieses bearbeiten
#   - table PROFIL leer? -> direkt in profil-editor gehen
#   - profil-editor: profil loeschen

func_toggle_values ()
{
	local COLOR_NOW="$1"
	local COLOR_A="$2"
	local COLOR_B="$3"

	[ "$COLOR_NOW" = "$COLOR_B" ] && {
		echo -n "$COLOR_A"
		return
	}
	
	echo -n "$COLOR_B"		# is also the initial value
}

func_admingui_get_action ()
{
	case $1 in
		all)
			echo "user_add user_edit user_show profile_add profile_edit"
		;;
		user_add)
			echo "EXPERT='false'"
			echo "DESC_SHORT='Benutzer hinzuf&uuml;gen'"
			echo "DESC_LONG='neue Benutzer im System anlegen'"
		;;
		user_edit)
			echo "EXPERT='false'"
			echo "DESC_SHORT='Benutzer bearbeiten'"
			echo "DESC_LONG='vorhandene Benutzer bearbeiten'"
		;;
		user_show)
			echo "EXPERT='false'"
			echo "DESC_SHORT='Benutzer anzeigen'"
			echo "DESC_LONG='alle angelegten Benutzer anzeigen'"
		;;
		profile_add)
			echo "EXPERT='true'"
			echo "DESC_SHORT='Benutzerprofil erstellen'"
			echo "DESC_LONG='ein neues Benutzerprofil anlegen'"
		;;
		profile_edit)
			echo "EXPERT='true'"
			echo "DESC_SHORT='Benutzerprofile bearbeiten'"
			echo "DESC_LONG='Benutzerprofile bearbeiten oder l&ouml;schen'"
		;;
		*)
			echo "EXPERT='false'"
			echo "DESC_SHORT='Auswahl'"
			echo "DESC_LONG='hier werden Benutzer oder Profile verwaltet'"
		;;
	esac
}

func_admingui_links2category ()
{
	local ACTION BGCOLOR DESC DESC_SHORT DESC_LONG EXPERT
	
	for ACTION in $(func_admingui_get_action all); do {
		
		BGCOLOR="$( func_toggle_values "$BGCOLOR" "#FAEBD7" "#DCDCDC" )"

		eval $(func_admingui_get_action $ACTION)                          

		echo -n "<td bgcolor='$BGCOLOR' align='center'>"
		
		[ "$EXPERT" = "true" ] && echo -n "<table class='trg' style='display: none; visibility: hidden;'><tr><td align='center'>"
		
		echo -n "<form method='GET'>"
		echo -n "<input type='hidden' name='FORM_ACTION' value='$ACTION'><input type='submit' value='$DESC_SHORT'></form>"
		echo -n "$DESC_LONG</td>"
		
		[ "$EXPERT" = "true" ] && echo -n "</td></tr></table>"
	} done
}

func_admingui_javascript ()		# http://www.tutorials.de/forum/javascript-ajax/329323-tabellenzeilen-verstecken-anzeigen.html
{
	cat<<EOF
	<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript"><!--

	function getElementsByClassName(strClassName)
	{
		var arrHelp = new Array();
		var strPattern = eval("/"+strClassName+"/");
		var arrTags = (navigator.userAgent.toLowerCase().indexOf("msie") != -1) ? document.all : document.getElementsByTagName('*');

		for(varEntry in arrTags){
			if((arrTags[varEntry].className) && (arrTags[varEntry].className.match(strPattern))){
				arrHelp[arrHelp.length] = arrTags[varEntry];
			}
		}

		return arrHelp;
	}

	function toggleMe(item)
	{
		var e=getElementsByClassName(item);
	
		if(!e)return true;

		for (var i = 0; i < e.length; i++){
			with (e[i].style){
				if(visibility == 'hidden' || display=='none'){
					display = '';
					visibility = 'visible';
				}else{
					display = 'none';
					visibility = 'hidden';
				}
			}
		}

		return true;
	}
	--></SCRIPT>
EOF
}

func_admingui_user_add_form_was_send ()		# LIST="$( func_db_user all )" + write each element to DB ?
{
	local COUNT="$FORM_USERADD_COUNT"
	
	if [ "$COUNT" -gt 1 ]; then
		echo -n "<h2>Es wurden $FORM_USERADD_COUNT Benutzer angelegt.</h2>"
	else
		echo -n "<h2>Es wurde $FORM_USERADD_COUNT Benutzer angelegt.</h2>"
	fi
	
	echo -n "<pre>"
	
	local FIELD OBJ LIST="$(func_admingui_user_add_form_get_elements all sql)"
	
	for OBJ in $LIST; do {
		eval $(func_admingui_user_add_form_get_elements $OBJ)
		echo "'$OBJ' - '$SQLCLASS' - '$EXPERT' - \$FORM_USERADD_$OBJ exist?: '$( eval $( echo echo \$FORM_USERADD_$OBJ ) )'"
	} done
	
	echo -n "</pre>"
}

func_admingui_user_add_form ()
{
	local N SWITCH EXPERT COUNT VALUE BGCOLOR FORM_TYPE DESC DESC_SHORT DESC_LONG DEFAULT_VAL DEFAULT_TXT

	echo -n "<form method='get' accept-charset='ISO-8859-1'><input type='hidden' name='FORM_ACTION' value='user_add'><input type='hidden' name='FORM_SEND' value='true'>"
	echo -n "<table id='tabID' cellspacing='0' cellpadding='2' border='0' width='100%'><tr><td width='10%'>&nbsp;</td><td width='10%'>&nbsp;</td><td width='80%'>&nbsp;</td></tr>"
	
	for VALUE in $(func_admingui_user_add_form_get_elements all); do {

		BGCOLOR="$( func_toggle_values "$BGCOLOR" "#FAEBD7" "#DCDCDC" )"
					 
		eval $(func_admingui_user_add_form_get_elements $VALUE)

		if [ "$EXPERT" = "true" ]; then
			[ "$SWITCH" != "true" ] && {
				SWITCH="true"
				echo -n "<tr><td colspan='3' align='right' bgcolor='$BGCOLOR'>"
				echo -n "<a href='#' ONCLICK=\"toggleMe('trg');\">Zusatzeinstellungen anzeigen</a></td></tr>"
				BGCOLOR="$( func_toggle_values "$BGCOLOR" "#FAEBD7" "#DCDCDC" )"
			}
			echo -n "<tr class='trg' style='display: none; visibility: hidden;'>"
		else
			echo -n "<tr>"
		fi
		
		echo -n "<td bgcolor='$BGCOLOR'>${DESC_SHORT}&nbsp;&nbsp;</td><td bgcolor='$BGCOLOR'>"
		
		case $FORM_TYPE in
			radio)
				echo -n "<input type='radio' name='FORM_USERADD_$VALUE' value='$DEFAULT_VAL' checked> $DEFAULT_TEXT"
				echo -n "<input type='radio' name='FORM_USERADD_$VALUE' value='$DEFAULT_VAL1'       > $DEFAULT_TEXT2"
			;;
			select)
				echo -n "<select size='1' name='FORM_USERADD_$VALUE'>"
				for OPTION in $DEFAULT_VALS; do {
					echo -n "<option value='$OPTION'>$( eval $( echo -n echo -n \$DEFAULT_TXT${N} ) )</option>"
					N=$(( $N + 1 ))
				} done && N=
				echo -n "</select>"
			;;
			*)
				echo -n "<input type='text' name='FORM_USERADD_$VALUE' value='$DEFAULT_VAL'>"
			;;
		esac
		
		echo -n "</td><td bgcolor='$BGCOLOR'>&nbsp;&nbsp;${DESC_LONG}</td></tr>"
	} done

	echo -n "<tr><td colspan='3'>&nbsp;</td></tr><tr><td valign='middle' align='center' bgcolor='#D3D3D3' colspan='2'><br>"
	echo -n "<input type='submit' value='Benutzer anlegen'><br><br></td><td bgcolor='#D3D3D3'>&nbsp;</td></tr></table>"
}

func_admingui_user_add_form_get_elements ()
{
	case $1 in
		all)
			echo -n "COUNT PROFILE COMMENT NAME PASS MAC MAXMAC ISOLATION "
			[ "$2" = "sql" ] && {
				echo -n "ID INSTALLED FIRSTSEEN LASTSEEN TRAFFALL TRAFFTODAY TIMEALL TIMETODAY"
			}
		;;
		COUNT)
			echo "SQLCLASS='INTEGER'"
			echo "EXPERT='false'"
			echo "FORM_TYPE='text'"
			echo "DEFAULT_VAL='1'"
			echo "DESC_SHORT='Benutzeranzahl'"
			echo "DESC_LONG='wieviele Benutzer sollen angelegt werden?'"
		;;
		NAME)
			echo "SQLCLASS='TEXT'"
			echo "EXPERT='true'"
			echo "FORM_TYPE='text'"
			echo "DEFAULT_VAL='auto'"
			echo "DESC_SHORT='Benutzername'"
			echo "DESC_LONG='wird automatisch vorgegeben, kann auch manuell eingetragen werden'"
		;;
		PASS)
			echo "SQLCLASS='TEXT'"
			echo "EXPERT='true'"			# user can alter this!?
			echo "FORM_TYPE='text'"
			echo "DEFAULT_VAL='auto'"
			echo "DESC_SHORT='Passwort'"
			echo "DESC_LONG='wird automatisch vorgegeben, kann auch manuell eingetragen werden'"	
		;;
		PROFILE)
			local N PROFILE PROFILE_LIST="$( func_db_profile ID all )"
		
			echo "SQLCLASS='INTEGER'"
			echo "EXPERT='false'"
			echo "FORM_TYPE='select'"
			echo "DEFAULT_VALS='$PROFILE_LIST'"
			
			for PROFILE in $PROFILE_LIST; do {
				echo "DEFAULT_TXT${N}='$( func_db_profile DESC $PROFILE )'"
				N=$(( $N + 1 ))
			} done
			
			echo "DESC_SHORT='Profil'"
			echo "DESC_LONG='Zusammenfassung grundlegender Benutzerrechte (G&uuml;ltigkeitsdauer,&nbsp;...)'"
		;;
		MAC)
			echo "SQLCLASS='TEXT'"
			echo "EXPERT='true'"
			echo "FORM_TYPE='text'"
			echo "DEFAULT_VAL='auto'"		# space separated?
			echo "DESC_SHORT='MAC-Adresse'"
			echo "DESC_LONG='wird automatisch vorgegeben, kann auch manuell vergeben werden'"
		;;
		MAXMAC)
			echo "SQLCLASS='INTEGER'"
			echo "EXPERT='true'"
			echo "FORM_TYPE='text'"
			echo "DEFAULT_VAL='1'"
			echo "DESC_SHORT='Ger&auml;teanzahl'"
			echo "DESC_LONG='Endger&auml;te die sich mit gleicher Kennung anmelden d&uuml;rfen (Gruppenticket)'"
		;;
		COMMENT)
			echo "SQLCLASS='TEXT'"
			echo "EXPERT='true'"
			echo "FORM_TYPE='text'"
			echo "DEFAULT_VAL='...'"
			echo "DESC_SHORT='Kommentar'"
			echo "DESC_LONG='interner Vermerk, z.B. Zimmernummer'"
		;;
		ISOLATION)
			echo "SQLCLASS='INTEGER'"
			echo "EXPERT='true'"
			echo "FORM_TYPE='radio'"
			echo "DEFAULT_VAL='true'"
			echo "DEFAULT_TXT='ja'"
			echo "DEFAULT_VAL1='false'"
			echo "DEFAULT_TXT1='nein'"
			echo "DESC_SHORT='Isolation'"
			echo "DESC_LONG='Schutz des Netzteilnehmers vor Zugriff durch andere Benutzer?'"
		;;
		ID)
			echo "SQLCLASS='INTEGER PRIMARY KEY'"	# eindeutiger bezeichner pro user-kennung
			echo "EXPERT='sql'"
		;;
		INSTALLED)
			echo "SQLCLASS='INTEGER'"		# unixzeit / anlegezeitpunkt in DB
			echo "EXPERT='sql'"
		;;
		FIRSTSEEN)
			echo "SQLCLASS='INTEGER'"		# unixzeit / erster erfolgreicher einlogvorgang
			echo "EXPERT='sql'"
		;;
		LASTSEEN)
			echo "SQLCLASS='INTEGER'"		# unixzeit / letzter auslogvorgang
			echo "EXPERT='sql'"
		;;
		TRAFFALL)
			echo "SQLCLASS='INTEGER'"		# traffic [megabyte] insgesamt
			echo "EXPERT='sql'"			# trafficmeldungen ("fetch me!" -> scp alle transaktionen)
		;;
		TRAFFTODAY)
			echo "SQLCLASS='INTEGER'"		# traffic [megabyte] heute	// trafficmeldungen
			echo "EXPERT='sql'"
		;;
		TIMEALL)
			echo "SQLCLASS='INTEGER'"		# minutenverbrauch insgesamt	// trafficmeldungen
			echo "EXPERT='sql'"
		;;
		TIMETODAY)
			echo "SQLCLASS='INTEGER'"		# minutenverbrauch heute	// trafficmeldungen
			echo "EXPERT='sql'"
		;;
	esac
}

func_db_init ()
{
	local DB="/tmp/admin"

	[ -e "$DB" ] && return

	local SQLBIN="$( which sqlite3 )"

	$SQLBIN $DB "$(func_db_profile init)"
	$SQLBIN $DB "$(func_db_user    init)"
	$SQLBIN $DB "CREATE TABLE DEVICES(USER TEXT, MAC TEXT, DEVTYPE TEXT);"
}

func_db_profile ()		# insert into PROFILE values('hello!',10);
{
	case $1 in
		init)
			local COL COLS="$( func_db_profile all )"
			
			echo -n "CREATE TABLE PROFILE("
			
			for COL in $COLS EOL; do {
				eval $(func_db_profile $COL)
				echo -n "$COL $SQLCLASS"
				[ "$COL" != "EOL" ] && echo -n ", "
			} done
			
			echo -n ");"
		;;
		all)
			echo -n "ID DESC VALIDITY MAXTRAFFALL MAXTRAFFPERDAY MAXSPEEDUP MAXSPEEDDOWN MAXTIMEALL MAXTIMEPERDAY LANDINGURL COST CURRENCY"
		;;
		EOL)
			return
		;;
		ID)
			case $2 in
				all)
					echo -n "ticket_24h ticket_48h ticket_1monat"
				;;
				*)
					echo "SQLCLASS='INTEGER PRIMARY KEY'"
				;;
			esac
		;;
		DESC)
			case $2 in
				ticket_24h)
					echo -n "1-Tages-Ticket f&uuml;r G&auml;ste"
				;;
				ticket_48h)
					echo -n "2-Tages-Ticket f&uuml;r G&auml;ste"
				;;
				ticket_1monat)
					echo -n "Monatsticket f&uuml;r Mitarbeiter"
				;;
				*)
					echo "SQLCLASS='TEXT'"
				;;
			esac
		;;
		VALIDITY)
			echo "SQLCLASS='INTEGER'"
		;;
		MAXTRAFFALL)
			echo "SQLCLASS='INTEGER'"
		;;
		MAXTRAFFPERDAY)
			echo "SQLCLASS='INTEGER'"
		;;
		MAXSPEEDUP)
			echo "SQLCLASS='INTEGER'"
		;;
		MAXSPEEDDOWN)
			echo "SQLCLASS='INTEGER'"
		;;
		MAXTIMEALL)
			echo "SQLCLASS='INTEGER'"
		;;
		MAXTIMEPERDAY)
			echo "SQLCLASS='INTEGER'"
		;;
		LANDINGURL)
			echo "SQLCLASS='TEXT'"
		;;
		COST)
			echo "SQLCLASS='INTEGER'"
		;;
		CURRENCY)
			echo "SQLCLASS='TEXT'"
		;;
	esac
}

func_db_devices ()
{
	return
}
