#!/bin/sh
. /tmp/loader

# fixme! Idee: - es wird direkt eine Seite erzeugt, die man sich direkt ausdrucken kann mit allen
#              - technischen Daten fuer diesen Router und freies Feld fuer das Passwort

if [ -z "$1" ]; then		# call from httpd

	eval $( _http query_string_sanitize )

	[ "$REQUEST_METHOD" = "POST" ] && {			# do this, if submit-button was pressed
								# (POST-method) - GET arguments are passed too(!)
		[ -n "$FORM_LATITUDE" ] && [ -n "$FORM_LONGITUDE" ] && {
			_log do setting_gps user info "LATITUDE='$FORM_LATITUDE' LONGITUDE='$FORM_LONGITUDE'"
			_nvram set ff_adm_latlon "$FORM_LATITUDE;$FORM_LONGITUDE"
			_nvram set commit "changed ff_adm_latlon"
			_scheduler add "restart_olsr"
		}
	
		[ -n "$IPWIZARD" ] && {
			eval "$( _ipsystem do $IPWIZARD )"
		}

		[ -n "$TFTP_HARDWARE" ] && {
			_tool htmlout_head
			fkt_print_tftp_flashing
			_tool htmlout_foot
			exit
		}
	}
else				# call from shell
	OPT="$1"	
fi

case "$OPT" in
	print_everlog)
		_tool htmlout_head
		[ ! -e /www/everlasting_syslog.txt ] && {
			echo "Bisher sind keine wichtigen Systemmeldungen angefallen.<br>"
			exit
		}
		echo "<pre>"
		cat /www/everlasting_syslog.txt
		echo "</pre>"
	;;
	antenna_test)
		_tool htmlout_head
		echo "Der Automatische Antennentest wurde in die Warteschlange gestellt.<br>"
		echo "Das Ergebnis ist in wenigen Minuten &uuml;ber das<br>"
		echo "'resetfeste Computerlogbuch' im Werkzeug einsehbar<br><br><pre>"
		_scheduler add "/usr/sbin/cron.select_best_antenna_fff+ force"
		_scheduler queue_list
		echo "</pre>"
	;;
	neigh)
		_tool htmlout_head
		func_print_neigh
	;;
	adblock_table)
		_tool htmlout_head
		func_print_adblock_table
	;;
	mac2ip_table)
		_tool htmlout_head
		func_print_mac2ip_table
	;;
	wifi_on_or_off)
		_tool htmlout_head
		func_wifi_on_or_off
	;;
	fwupdate)
		_tool htmlout_head
		func_print_update_help
	;;
	fwupdatecheck)
		_tool htmlout_head
		_tool fwupdatecheck
	;;
	tftp)
		_tool htmlout_head
		fkt_print_tftp_help
	;;
	wikistartpic)
		_tool htmlout_head
		fkt_grab_startpic_from_wiki
	;;
	killallwget)
		_tool htmlout_head
		fkt_killall_wget
	;;
	wifimac)
		_tool htmlout_head
		_net dev2mac $WIFIDEV
	;;
	time)
		_tool htmlout_head
		fkt_print_time
	;;
	version)
		_tool htmlout_head
		fkt_print_version
	;;
	notebookconf)
		_tool htmlout_head
		fkt_print_html_notebook_conf
	;;
	netfilterolsr)
		_tool htmlout_head
		fkt_print_html_netfilter_olsr
	;;
	netfilter)
		_tool htmlout_head
		fkt_print_html_netfilter
	;;
	speedarchiv)
		_tool htmlout_head
		fkt_print_html_speedarchiv
	;;
	tracearchiv)
		_tool htmlout_head
		fkt_print_html_tracearchiv
	;;
	servicearchiv)
		_tool htmlout_head
		fkt_print_html_servicearchiv
	;;
	node_data_archiv)
		_tool htmlout_head
		fkt_print_html_node_data_archiv
	;;
	sysinfo)
		_tool htmlout_head
		fkt_print_html_sysinfo
	;;
	syslog)
		_tool htmlout_head
		fkt_print_html_syslog
	;;
	tracetest)
		_tool htmlout_head
		fkt_print_html_internet_trace
	;;
	traceremote)
		_tool htmlout_head
		fkt_print_html_trace_to_remote
	;;
	telnet)
		_tool htmlout_head
		fkt_start_or_end_telnetd
	;;
	accounting)
		_tool htmlout_head
		fkt_print_accounting
	;;
	reboot)
		_tool htmlout_head
		fkt_print_link_to_reboot
	;;
	accounting_gen_cache)
		fkt_print_accounting generate_cache >/tmp/cached_fkt_print_accounting
	;;
	*)
		GUI=1
		_tool htmlout_head
		_tool htmlout_selectbox
	;;
esac

_tool htmlout_foot
